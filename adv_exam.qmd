# Example

## 画房子

### 方法 1

```{r}
#| code-fold: true
#| message: false

library(tidyverse)
ggplot()+
  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  theme(panel.background = element_rect(fill="white"))+
  coord_fixed()+
  geom_polygon(aes(x=c(200,700,700,200),y=c(50,50,600,600)),fill="brown",color="white")+
  geom_polygon(aes(x=c(50,450,850),y=c(600,830,600)),color="black",fill="black")+
  geom_polygon(aes(c(300,450,450,300),c(50,50,350,350)),fill="orange",color="white")+
  geom_polygon(aes(c(375,380,380,375),c(50,50,350,350)),fill="grey",color="white")+
  geom_polygon(aes(c(355,400,400,355),c(200,200,204,204)),fill="black")+
  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+
  geom_polygon(aes(x=c(500,650,650,500),y=c(400,400,550,550)),fill="white",color="white")+
  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color="red")+
  geom_polygon(aes(x=c(575,576,576,575),y=c(400,400,550,550)),color="black")+
  geom_polygon(aes(x=c(500,650,650,500),y=c(475,475,476,476)),color="black")+
  geom_polygon(aes(x=c(620,670,670,620),y=c(620,620,800,800)),fill="black",color="black")+
  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill="grey",color="black")+
  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill="grey",color="black")
```

```{r}
library(readxl)
data <- read_excel("data/data.xlsx",1)
data
```

### 方法 2

```{r}
#| warning: false
#| code-fold: true
#| message: false

library(tidyverse)
ggplot(data=NULL,aes(x,y,fill=fill,color=color))+
  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  scale_fill_identity()+
  scale_color_identity()+
  theme(panel.background = element_rect(fill="white"))+
  coord_fixed()+
  geom_polygon(data=data[which(data$type=="qiang"),])+   #墙
  geom_polygon(data=data[which(data$type=="ding"),])+    #房顶
  geom_polygon(data=data[which(data$type=="men"),])+     #门
  geom_polygon(data=data[which(data$type=="menfeng"),])+ #门缝
  geom_polygon(data=data[which(data$type=="menshuan"),])+#门栓
  geom_point(data=data[which(data$type=="menhuan"),],shape=1,size=2)+ #门环
  geom_polygon(data=data[which(data$type=="chuanghu"),])+ #窗户
  geom_point(data=data[which(data$type=="chuanghudong"),],shape=1,size=rel(18),color="red")+ #窗户洞
  geom_polygon(data=data[which(data$type=="chuanghufeng1"),])+ #窗户缝1
  geom_polygon(data=data[which(data$type=="chuanghufeng2"),])+ #窗户缝2
  geom_polygon(data=data[which(data$type=="yancong"),])+ #烟囱
  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill="grey",color="black")+
  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill="grey",color="black")
```

### 方法 3

```{r}
#| code-fold: true
#| message: false

ggplot()+
  geom_polygon(data=data,aes(x,y,fill=fill,color=color,group=ID))+
  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+
  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color="red")+
  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill="grey",color="black")+
  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill="grey",color="black")+
  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+
  scale_fill_identity()+
  scale_color_identity()+
  theme(panel.background = element_rect(fill="white"))+
  coord_fixed()
```

## 程序包下载量时序图

> 统计Hadley Wickman主流的程序包 包括：'tidyverse','ggplot2','dplyr','tidyr','stringr','lubridate' 统计截止到目前的下载量

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(tidyverse)
library(cranlogs)
data1=cran_downloads(package=c('tidyverse','ggplot2','dplyr','tidyr',
                               'stringr','lubridate'),
                     from = "2012-01-01", 
                     to = "2022-09-30") 
as_tibble(data1)
```

```{r}
#| code-fold: true
#| message: false

library(ggthemr)
ggthemr("flat")
ggplot(data1,aes(date,count,group=package))+ 
  geom_line(aes(colour=package))+ 
  labs(x = "日期",y='下载量',
       title = "2012~2022[Hadley Wickham]程序包下载量时序图", 
       subtitle = R.version.string)+
  theme(plot.title=element_text(hjust=0.5),
        plot.subtitle=element_text(hjust=0.5))
  ggthemr_reset()
```

```{r}
data_new=head(sort(data1$count,TRUE),10) #排序，列出前十个，然后去掉
as_tibble(data_new)
data_tidy=data1[!(data1$count%in%data_new) & data1$package=="tidyverse",]
as_tibble(data_tidy)
```

### tidyverse下载量

```{r}
#| code-fold: true
#| message: false

ggthemr("flat")
ggplot(data_tidy,
       aes(date,count,group=package))+ 
  geom_line(aes(colour=package))+ 
  labs(x = "日期",y='下载量',
       title = "2012~2022[Hadley Wickham]程序包下载量时序图", 
       subtitle = R.version.string)+
  theme(plot.title=element_text(hjust=0.5),
        plot.subtitle=element_text(hjust=0.5))
  ggthemr_reset()
```

### 其它包下载量

```{r}
#| code-fold: true
#| message: false

ggthemr("flat")
ggplot(data1[which(data1$package !="tidyverse"),],aes(date,count,group=package))+ 
  geom_line(aes(colour=package))+ 
  labs(x = "日期",y='下载量',
       title = "2012~2022[Hadley Wickham]程序包下载量时序图", 
       subtitle = R.version.string)+
  theme(plot.title=element_text(hjust=0.5),
        plot.subtitle=element_text(hjust=0.5))
  ggthemr_reset()
```

### 过去一年的下载量

```{r}
#| code-fold: true
#| message: false

library(cranlogs)
data=cran_top_downloads("last-month",count = 20)
as_tibble(data)
```

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(ggthemr)
ggthemr("flat")
ggplot(data,aes(x=reorder(package,count),y=count))+
  geom_bar(stat='identity')+
  labs(x = "",y='下载量',
       title = "过去一个月R包下载量TOP20", 
       subtitle = R.version.string)+
  scale_y_continuous(breaks =seq(1000000,2800000,length=5),
                     labels=seq(1000000,2800000,length=5))+
  theme(plot.title=element_text(hjust=0.5),
        plot.subtitle=element_text(hjust=0.5))+
  coord_flip()
  ggthemr_reset()
```

## kaggle主要工具使用比

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(readxl)
tools_data<-read_excel("data/data.xlsx",5)
as_tibble(tools_data)
bks <- c(0,1460.2, 2920.4, 4380.6, 5840.8) 
ggplot(tools_data,aes(x=reorder(selections,count),y=count))+
  geom_bar(stat="identity")+
  geom_hline(yintercept = bks[-c(1,5)],color="grey",size=1,linetype=3)+
  geom_text(aes(label=paste(round(count*100/7301,2),"%",sep="")),hjust=-0.3)+
  xlab(label="tools")+
  scale_fill_manual(values=c("red"))+
  scale_y_continuous("percent", limits=c(0,5000),breaks = bks[-5], labels = paste(round(bks[-5]*100/7301),"%",sep=""))+
  coord_flip()+
  theme_light()
```

## 申请基金与年龄的关系

### 不同阶段成功次数

> 根据二项分布求出的理论最大成功申请基金的数量和年龄的关系

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(readxl)
data<-read_excel("data/data.xlsx",6)
as_tibble(data)
ggplot(data,aes(x=年龄,y=理论最大成功次数))+
  geom_linerange(aes(ymin = 0, ymax = 理论最大成功次数-0.1),
                 color="grey",size=3,linetype=6)+
  geom_point(aes(y=理论最大成功次数-0.5),
             shape=17,size=10,color="magenta")+
  geom_text(aes(label=理论最大成功次数),
            vjust=-0.5,fontface="bold",size=5)+
  theme_classic()
```

### 年龄段与最大命中率

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(readxl)
data<-read_excel("data/data.xlsx",7)
as_tibble(data)
ggplot(data,aes(x=年龄,y=命中次数))+
  geom_point(size=22,shape=21)+
  geom_step(aes(group=1),linetype=6,size=2,color="grey")+
  geom_text(aes(label=round(as.numeric(data$命中率),2),vjust=0.4,fontface="bold"),size=6)+
  theme_bw()
```

### 年龄段次数和概率

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
library(readxl)
data<-read_excel("data/data.xlsx",8)
as_tibble(data)
library(ggthemes)
ggplot(data,aes(x=命中次数,y=命中率,fill=年龄))+
  geom_bar(stat="identity")+
  scale_x_discrete(breaks=sprintf("%02.f",seq(0,12,3)),labels=as.character(seq(0,12,3)))+
  facet_wrap(~年龄,scale="free")+
  theme_wsj()
```

## 相关矩阵

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
data(mtcars)
library(psych) #计算相关系数及P值
library(tidyverse)#数据处理及可视化
data<-mtcars#读入示例数据
x<-c(1,2,3,4,5,6,7,8,9,10,11);# x轴方向的变量，即显示mtcars中mpg,cyl,disp变量
y<-c(1,2,3,4,5,6,7,8,9,10,11);# y轴方向的变量，即显示mtcars中所有的11个变量
cormat<-corr.test(data)
r<-cormat$r[x,y];r<-as.data.frame(r);r$namer<-row.names(r)
r<-gather(r,key=var1,value=cor,-namer)

p<-cormat$p[x,y];p<-as.data.frame(p);p$namep<-row.names(p)
p<-gather(p,key=var2,value=p,-namep)

#根据 x和y向量的长度生成网格序列存入df数据框中
df <- expand.grid(x = 1:length(x)-1, y = 1:length(y)-1)
df<-cbind(df,r,p)
df$sig<-ifelse(df$cor<=0.001,"***",
               ifelse(df$cor<=0.01,"**",
                      ifelse(df$cor<=0.05,"*",
                             ifelse(df$cor<=0.10,"+","-"))))
xlabel<-unique(arrange(df[,c("x","y","var1")],y)$var1) #y方向的变量名称
ylabel<-unique(arrange(df[,c("x","y","namer")],desc(x))$namer) #x方向的变量名称
```

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
ggplot(df, aes(x, y, fill = cor)) +  
  geom_raster(hjust = 0, vjust = 0)+
  geom_text(aes(x=x-0.5,y=y-0.5,label=sig),size=3)+ #显著度
  annotate('text',x=-1.2,y=seq(1,length(xlabel),1)-1.5,
           label=xlabel,size=5,hjust=1)+
  annotate('text',x=seq(1,length(ylabel),1)-1.5,y=length(y)-0.7,
           label=ylabel,size=5,angle=90,hjust=0)+
  scale_x_continuous(limits=c(-3,length(x)-1),
                     breaks=seq(-2,length(x)-1,1))+
  scale_y_continuous(limits=c(-1,length(y)),
                     breaks=seq(-1,length(y),1))+
  coord_fixed(ratio=1)+
  scale_fill_gradient2(guide=FALSE,low = "#5da6bb", 
                       mid="#FFFFFF",high = "#fb5c39")+
  theme(axis.title=element_blank(),
        axis.ticks=element_blank(),
        axis.text=element_blank(),
        panel.background  = element_blank())
```

## 读取shp文件

```{r}
library(readxl)
data<-read_excel("data/data.xlsx",10)
as_tibble(data)
```

```{r}
#| warning: false
#| code-fold: true
#| message: false


library(ggthemes)
china_map<-sf::st_read("data/province.shp")#province border
ggplot(data=data)+
  geom_sf(data=china_map,aes(fill=pr_name,geometry=geometry))+
  geom_point(aes(x = lon, y = lat), size = 0.3)+
  guides(fill=FALSE)+
  coord_sf(crs = sf::st_crs(4326))+
  theme_map()
```

## 等值线图

```{r}
library(readxl)
data<-read_excel("data/data.xlsx",11)
as_tibble(data)
```

```{r}
#| warning: false
#| code-fold: true
#| message: false
#| 
#栅格化每一列数据，存入data_grid中，以进行画图
#数据表列名依次为:lon,lat,Mon,Tue,Wed,……,annual
library(tidyverse)

data_grid<-data.frame(lon=NA,lat=NA,value=NA,tag=NA)
# time_vec<-c('annual','spring','summer','autumn','winter',
#             'Mon','Tue','Wed','Thu','Fri','Sat','Sun')

time_vec<-c('spring','summer','autumn','winter')

for (i in time_vec)
{
  annual_loess<-loess(data[,which(colnames(data)==i)][[1]]~lon+lat,data=data)
  lon_grid<-seq(min(data$lon),max(data$lon),0.25)
  lat_grid<-seq(min(data$lat),max(data$lat),0.25)
  data.fit<-expand.grid(lon=lon_grid,lat=lat_grid)
  annual_predict<-as.data.frame(predict(annual_loess,newdata=data.fit))
  annual_predict$lon<-row.names(annual_predict)
  annual_grid<-gather(annual_predict,lat,value,-lon)
  annual_grid$lon<-as.numeric(str_sub(annual_grid$lon,str_locate(annual_grid$lon,'=')[,1]+1))
  annual_grid$lat<-as.numeric(str_sub(annual_grid$lat,str_locate(annual_grid$lat,'=')[,1]+1)) 
  annual_grid$tag<-i
  data_grid<-rbind(data_grid,annual_grid)
}
data_grid<-data_grid[!is.na(data_grid$tag),]
data_grid$tagnew<-factor(data_grid$tag,ordered=TRUE,levels=time_vec)
ggplot() + 
  stat_contour(geom="polygon",data=data_grid, aes(x=lon, y=lat, z=value,fill=..level..),binwidth=0.01)+
  scale_fill_distiller(palette = "Spectral")+
  facet_wrap(~tagnew,ncol=2)
```
