[
  {
    "objectID": "adv_exam.html",
    "href": "adv_exam.html",
    "title": "\n16  Example\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nggplot()+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()+\n  geom_polygon(aes(x=c(200,700,700,200),y=c(50,50,600,600)),fill=\"brown\",color=\"white\")+\n  geom_polygon(aes(x=c(50,450,850),y=c(600,830,600)),color=\"black\",fill=\"black\")+\n  geom_polygon(aes(c(300,450,450,300),c(50,50,350,350)),fill=\"orange\",color=\"white\")+\n  geom_polygon(aes(c(375,380,380,375),c(50,50,350,350)),fill=\"grey\",color=\"white\")+\n  geom_polygon(aes(c(355,400,400,355),c(200,200,204,204)),fill=\"black\")+\n  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+\n  geom_polygon(aes(x=c(500,650,650,500),y=c(400,400,550,550)),fill=\"white\",color=\"white\")+\n  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color=\"red\")+\n  geom_polygon(aes(x=c(575,576,576,575),y=c(400,400,550,550)),color=\"black\")+\n  geom_polygon(aes(x=c(500,650,650,500),y=c(475,475,476,476)),color=\"black\")+\n  geom_polygon(aes(x=c(620,670,670,620),y=c(620,620,800,800)),fill=\"black\",color=\"black\")+\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")\n\n\n\n\n\nlibrary(readxl)\ndata <- read_excel(\"data/data.xlsx\",1)\ndata\n\n# A tibble: 38 × 7\n      ID label type      x     y fill   color\n   <dbl> <chr> <chr> <dbl> <dbl> <chr>  <chr>\n 1     1 墙    qiang   200    50 brown  white\n 2     1 墙    qiang   700    50 brown  white\n 3     1 墙    qiang   700   600 brown  white\n 4     1 墙    qiang   200   600 brown  white\n 5     2 房顶  ding     50   600 black  black\n 6     2 房顶  ding    450   830 black  black\n 7     2 房顶  ding    850   600 black  black\n 8     3 门    men     300    50 orange white\n 9     3 门    men     450    50 orange white\n10     3 门    men     450   350 orange white\n# … with 28 more rows\n\n\n\n\nCodelibrary(tidyverse)\nggplot(data=NULL,aes(x,y,fill=fill,color=color))+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_fill_identity()+\n  scale_color_identity()+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()+\n  geom_polygon(data=data[which(data$type==\"qiang\"),])+   #墙\n  geom_polygon(data=data[which(data$type==\"ding\"),])+    #房顶\n  geom_polygon(data=data[which(data$type==\"men\"),])+     #门\n  geom_polygon(data=data[which(data$type==\"menfeng\"),])+ #门缝\n  geom_polygon(data=data[which(data$type==\"menshuan\"),])+#门栓\n  geom_point(data=data[which(data$type==\"menhuan\"),],shape=1,size=2)+ #门环\n  geom_polygon(data=data[which(data$type==\"chuanghu\"),])+ #窗户\n  geom_point(data=data[which(data$type==\"chuanghudong\"),],shape=1,size=rel(18),color=\"red\")+ #窗户洞\n  geom_polygon(data=data[which(data$type==\"chuanghufeng1\"),])+ #窗户缝1\n  geom_polygon(data=data[which(data$type==\"chuanghufeng2\"),])+ #窗户缝2\n  geom_polygon(data=data[which(data$type==\"yancong\"),])+ #烟囱\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")\n\n\n\n\n\n\nCodeggplot()+\n  geom_polygon(data=data,aes(x,y,fill=fill,color=color,group=ID))+\n  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+\n  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color=\"red\")+\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_fill_identity()+\n  scale_color_identity()+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()"
  },
  {
    "objectID": "adv_exam.html#程序包下载量时序图",
    "href": "adv_exam.html#程序包下载量时序图",
    "title": "\n16  Example\n",
    "section": "\n16.2 程序包下载量时序图",
    "text": "16.2 程序包下载量时序图\n\n统计Hadley Wickman主流的程序包 包括：‘tidyverse’,‘ggplot2’,‘dplyr’,‘tidyr’,‘stringr’,‘lubridate’ 统计截止到目前的下载量\n\n\nCodelibrary(tidyverse)\nlibrary(cranlogs)\ndata1=cran_downloads(package=c('tidyverse','ggplot2','dplyr','tidyr',\n                               'stringr','lubridate'),\n                     from = \"2012-01-01\", \n                     to = \"2022-09-30\") \nas_tibble(data1)\n\n# A tibble: 23,556 × 3\n   date       count package  \n   <date>     <dbl> <chr>    \n 1 2012-01-01     0 tidyverse\n 2 2012-01-02     0 tidyverse\n 3 2012-01-03     0 tidyverse\n 4 2012-01-04     0 tidyverse\n 5 2012-01-05     0 tidyverse\n 6 2012-01-06     0 tidyverse\n 7 2012-01-07     0 tidyverse\n 8 2012-01-08     0 tidyverse\n 9 2012-01-09     0 tidyverse\n10 2012-01-10     0 tidyverse\n# … with 23,546 more rows\n\n\n\nCodelibrary(ggthemr)\nggthemr(\"flat\")\nggplot(data1,aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\ndata_new=head(sort(data1$count,TRUE),10) #排序，列出前十个，然后去掉\nas_tibble(data_new)\n\n# A tibble: 10 × 1\n      value\n      <dbl>\n 1 11692582\n 2   835133\n 3   208155\n 4   173066\n 5   166780\n 6   139752\n 7   134217\n 8   127256\n 9   125399\n10   122608\n\ndata_tidy=data1[!(data1$count%in%data_new) & data1$package==\"tidyverse\",]\nas_tibble(data_tidy)\n\n# A tibble: 3,924 × 3\n   date       count package  \n   <date>     <dbl> <chr>    \n 1 2012-01-01     0 tidyverse\n 2 2012-01-02     0 tidyverse\n 3 2012-01-03     0 tidyverse\n 4 2012-01-04     0 tidyverse\n 5 2012-01-05     0 tidyverse\n 6 2012-01-06     0 tidyverse\n 7 2012-01-07     0 tidyverse\n 8 2012-01-08     0 tidyverse\n 9 2012-01-09     0 tidyverse\n10 2012-01-10     0 tidyverse\n# … with 3,914 more rows\n\n\n\n16.2.1 tidyverse下载量\n\nCodeggthemr(\"flat\")\nggplot(data_tidy,\n       aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\n16.2.2 其它包下载量\n\nCodeggthemr(\"flat\")\nggplot(data1[which(data1$package !=\"tidyverse\"),],aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\n16.2.3 过去一年的下载量\n\nCodelibrary(cranlogs)\ndata=cran_top_downloads(\"last-month\",count = 20)\nas_tibble(data)\n\n# A tibble: 20 × 5\n    rank package       count from       to        \n   <int> <chr>         <int> <date>     <date>    \n 1     1 ggplot2     2905989 2022-09-12 2022-10-11\n 2     2 rlang       2797340 2022-09-12 2022-10-11\n 3     3 dplyr       2468406 2022-09-12 2022-10-11\n 4     4 vctrs       2343360 2022-09-12 2022-10-11\n 5     5 cli         2234584 2022-09-12 2022-10-11\n 6     6 ragg        2196955 2022-09-12 2022-10-11\n 7     7 textshaping 2163882 2022-09-12 2022-10-11\n 8     8 pillar      2067564 2022-09-12 2022-10-11\n 9     9 lifecycle   2061452 2022-09-12 2022-10-11\n10    10 devtools    1569135 2022-09-12 2022-10-11\n11    11 tibble      1562876 2022-09-12 2022-10-11\n12    12 pkgdown     1546883 2022-09-12 2022-10-11\n13    13 sf          1498433 2022-09-12 2022-10-11\n14    14 stringr     1367417 2022-09-12 2022-10-11\n15    15 tidyr       1344871 2022-09-12 2022-10-11\n16    16 jsonlite    1324942 2022-09-12 2022-10-11\n17    17 stringi     1278953 2022-09-12 2022-10-11\n18    18 tidyselect  1277921 2022-09-12 2022-10-11\n19    19 glue        1276164 2022-09-12 2022-10-11\n20    20 rgeos       1239790 2022-09-12 2022-10-11\n\n\n\nCodelibrary(ggthemr)\nggthemr(\"flat\")\nggplot(data,aes(x=reorder(package,count),y=count))+\n  geom_bar(stat='identity')+\n  labs(x = \"\",y='下载量',\n       title = \"过去一个月R包下载量TOP20\", \n       subtitle = R.version.string)+\n  scale_y_continuous(breaks =seq(1000000,2800000,length=5),\n                     labels=seq(1000000,2800000,length=5))+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))+\n  coord_flip()\n\n\n\nCode  ggthemr_reset()"
  },
  {
    "objectID": "adv_exam.html#kaggle主要工具使用比",
    "href": "adv_exam.html#kaggle主要工具使用比",
    "title": "\n16  Example\n",
    "section": "\n16.3 kaggle主要工具使用比",
    "text": "16.3 kaggle主要工具使用比\n\nCodelibrary(readxl)\ntools_data<-read_excel(\"data/data.xlsx\",5)\nas_tibble(tools_data)\n\n# A tibble: 15 × 2\n   selections                     count\n   <chr>                          <dbl>\n 1 Bayesian Techniques             2236\n 2 CNNS                            1383\n 3 Decision Trees                  3640\n 4 Ensemble Methods                2078\n 5 Evolutionary Approaches          404\n 6 GANs                             207\n 7 Gradient Boosted Machines       1742\n 8 HMMs                             392\n 9 Markov Logic Networks            355\n10 Neural Networks                 2743\n11 Other                            609\n12 Random Forests                  3378\n13 Regression/Logistic Regression  4636\n14 RNNS                             895\n15 SVMs                            1963\n\nCodebks <- c(0,1460.2, 2920.4, 4380.6, 5840.8) \nggplot(tools_data,aes(x=reorder(selections,count),y=count))+\n  geom_bar(stat=\"identity\")+\n  geom_hline(yintercept = bks[-c(1,5)],color=\"grey\",size=1,linetype=3)+\n  geom_text(aes(label=paste(round(count*100/7301,2),\"%\",sep=\"\")),hjust=-0.3)+\n  xlab(label=\"tools\")+\n  scale_fill_manual(values=c(\"red\"))+\n  scale_y_continuous(\"percent\", limits=c(0,5000),breaks = bks[-5], labels = paste(round(bks[-5]*100/7301),\"%\",sep=\"\"))+\n  coord_flip()+\n  theme_light()"
  },
  {
    "objectID": "adv_exam.html#申请基金与年龄的关系",
    "href": "adv_exam.html#申请基金与年龄的关系",
    "title": "\n16  Example\n",
    "section": "\n16.4 申请基金与年龄的关系",
    "text": "16.4 申请基金与年龄的关系\n\n16.4.1 不同阶段成功次数\n\n根据二项分布求出的理论最大成功申请基金的数量和年龄的关系\n\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",6)\nas_tibble(data)\n\n# A tibble: 12 × 2\n   年龄  理论最大成功次数\n   <chr>            <dbl>\n 1 28—30               11\n 2 31—33               10\n 3 34—36                9\n 4 37—39                8\n 5 40—42                7\n 6 43—45                6\n 7 46—48                5\n 8 49—51                4\n 9 52—54                3\n10 55—57                2\n11 58—60                1\n12 61—63                0\n\nCodeggplot(data,aes(x=年龄,y=理论最大成功次数))+\n  geom_linerange(aes(ymin = 0, ymax = 理论最大成功次数-0.1),\n                 color=\"grey\",size=3,linetype=6)+\n  geom_point(aes(y=理论最大成功次数-0.5),\n             shape=17,size=10,color=\"magenta\")+\n  geom_text(aes(label=理论最大成功次数),\n            vjust=-0.5,fontface=\"bold\",size=5)+\n  theme_classic()\n\n\n\n\n\n16.4.2 年龄段与最大命中率\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",7)\nas_tibble(data)\n\n# A tibble: 12 × 3\n   年龄  命中次数 命中率\n   <chr>    <dbl>  <dbl>\n 1 28—30        4   0.21\n 2 31—33        4   0.22\n 3 34—36        3   0.23\n 4 37—39        3   0.25\n 5 40—42        3   0.25\n 6 43—45        2   0.28\n 7 46—48        2   0.3 \n 8 49—51        1   0.34\n 9 52—54        1   0.39\n10 55—57        1   0.41\n11 58—60        0   0.64\n12 61—63        0   1   \n\nCodeggplot(data,aes(x=年龄,y=命中次数))+\n  geom_point(size=22,shape=21)+\n  geom_step(aes(group=1),linetype=6,size=2,color=\"grey\")+\n  geom_text(aes(label=round(as.numeric(data$命中率),2),vjust=0.4,fontface=\"bold\"),size=6)+\n  theme_bw()\n\n\n\n\n\n16.4.3 年龄段次数和概率\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",8)\nas_tibble(data)\n\n# A tibble: 144 × 3\n   年龄  命中次数  命中率\n   <chr> <chr>      <dbl>\n 1 28—30 00       0.00738\n 2 31—33 00       0.0115 \n 3 34—36 00       0.0180 \n 4 37—39 00       0.0281 \n 5 40—42 00       0.0440 \n 6 43—45 00       0.0687 \n 7 46—48 00       0.107  \n 8 49—51 00       0.168  \n 9 52—54 00       0.262  \n10 55—57 00       0.410  \n# … with 134 more rows\n\nCodelibrary(ggthemes)\nggplot(data,aes(x=命中次数,y=命中率,fill=年龄))+\n  geom_bar(stat=\"identity\")+\n  scale_x_discrete(breaks=sprintf(\"%02.f\",seq(0,12,3)),labels=as.character(seq(0,12,3)))+\n  facet_wrap(~年龄,scale=\"free\")+\n  theme_wsj()"
  },
  {
    "objectID": "adv_exam.html#相关矩阵",
    "href": "adv_exam.html#相关矩阵",
    "title": "\n16  Example\n",
    "section": "\n16.5 相关矩阵",
    "text": "16.5 相关矩阵\n\nCodedata(mtcars)\nlibrary(psych) #计算相关系数及P值\nlibrary(tidyverse)#数据处理及可视化\ndata<-mtcars#读入示例数据\nx<-c(1,2,3,4,5,6,7,8,9,10,11);# x轴方向的变量，即显示mtcars中mpg,cyl,disp变量\ny<-c(1,2,3,4,5,6,7,8,9,10,11);# y轴方向的变量，即显示mtcars中所有的11个变量\ncormat<-corr.test(data)\nr<-cormat$r[x,y];r<-as.data.frame(r);r$namer<-row.names(r)\nr<-gather(r,key=var1,value=cor,-namer)\n\np<-cormat$p[x,y];p<-as.data.frame(p);p$namep<-row.names(p)\np<-gather(p,key=var2,value=p,-namep)\n\n#根据 x和y向量的长度生成网格序列存入df数据框中\ndf <- expand.grid(x = 1:length(x)-1, y = 1:length(y)-1)\ndf<-cbind(df,r,p)\ndf$sig<-ifelse(df$cor<=0.001,\"***\",\n               ifelse(df$cor<=0.01,\"**\",\n                      ifelse(df$cor<=0.05,\"*\",\n                             ifelse(df$cor<=0.10,\"+\",\"-\"))))\nxlabel<-unique(arrange(df[,c(\"x\",\"y\",\"var1\")],y)$var1) #y方向的变量名称\nylabel<-unique(arrange(df[,c(\"x\",\"y\",\"namer\")],desc(x))$namer) #x方向的变量名称\n\n\n\nCodeggplot(df, aes(x, y, fill = cor)) +  \n  geom_raster(hjust = 0, vjust = 0)+\n  geom_text(aes(x=x-0.5,y=y-0.5,label=sig),size=3)+ #显著度\n  annotate('text',x=-1.2,y=seq(1,length(xlabel),1)-1.5,\n           label=xlabel,size=5,hjust=1)+\n  annotate('text',x=seq(1,length(ylabel),1)-1.5,y=length(y)-0.7,\n           label=ylabel,size=5,angle=90,hjust=0)+\n  scale_x_continuous(limits=c(-3,length(x)-1),\n                     breaks=seq(-2,length(x)-1,1))+\n  scale_y_continuous(limits=c(-1,length(y)),\n                     breaks=seq(-1,length(y),1))+\n  coord_fixed(ratio=1)+\n  scale_fill_gradient2(guide=FALSE,low = \"#5da6bb\", \n                       mid=\"#FFFFFF\",high = \"#fb5c39\")+\n  theme(axis.title=element_blank(),\n        axis.ticks=element_blank(),\n        axis.text=element_blank(),\n        panel.background  = element_blank())"
  },
  {
    "objectID": "adv_exam.html#读取shp文件",
    "href": "adv_exam.html#读取shp文件",
    "title": "\n16  Example\n",
    "section": "\n16.6 读取shp文件",
    "text": "16.6 读取shp文件\n\nlibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",10)\nas_tibble(data)\n\n# A tibble: 367 × 4\n   name         lon   lat elevation\n   <chr>      <dbl> <dbl>     <dbl>\n 1 诸暨       120.   29.7      16.4\n 2 昌都地区    96.9  30.1    3433. \n 3 林芝地区    94.4  29.6    3204. \n 4 日喀则地区  88.9  29.3    3896. \n 5 山南地区    91.8  29.2    3605. \n 6 黄山       118.   29.7     193. \n 7 朝阳       120.   41.6     181. \n 8 铜仁地区   109.   27.7     389. \n 9 阿克苏地区  80.3  41.2    1113. \n10 玉树州      97.0  33.0    3895. \n# … with 357 more rows\n\n\n\nCodelibrary(ggthemes)\nchina_map<-sf::st_read(\"data/province.shp\")#province border\n\nReading layer `province' from data source \n  `E:\\R_tmp\\aproaching_ggplot2\\data\\province.shp' using driver `ESRI Shapefile'\nSimple feature collection with 34 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 73.50235 ymin: 3.83703 xmax: 135.0957 ymax: 53.56362\nGeodetic CRS:  WGS 84\n\nCodeggplot(data=data)+\n  geom_sf(data=china_map,aes(fill=pr_name,geometry=geometry))+\n  geom_point(aes(x = lon, y = lat), size = 0.3)+\n  guides(fill=FALSE)+\n  coord_sf(crs = sf::st_crs(4326))+\n  theme_map()"
  },
  {
    "objectID": "adv_exam.html#等值线图",
    "href": "adv_exam.html#等值线图",
    "title": "\n16  Example\n",
    "section": "\n16.7 等值线图",
    "text": "16.7 等值线图\n\nlibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",11)\nas_tibble(data)\n\n# A tibble: 199 × 16\n   st.no   lon   lat   Mon   Tue   Wed   Thu   Fri   Sat   Sun   Jan spring\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n 1   258 123.   41.7 101.   96.4  94.7  95.7  97.7 104.  102.  122.    98.3\n 2   244 115.   38.0 132.  135.  136.  139.  143.  144.  136.  221.   123. \n 3    79 119.   26.1  58.9  58.4  57.1  57.9  59.3  58.1  58.5  68.0   64.8\n 4    45 113.   28.2  90.7  89.0  88.6  85.5  88.4  89.5  89.9 149.    80.5\n 5   142 117.   36.7 121.  115.  119.  126.  122.  125.  127.  169.   119. \n 6   194 104.   36.1  92.6  90.1  96.2  98.8 102.   95.4  91.7 111.    99.0\n 7   288 114.   30.6 102.   96.7  96.6  97.2  98.6 101.  104.  163.    94.8\n 8   294  87.6  43.8 109.  107.  113.  112.  110.  106.  106.  203.    93.8\n 9    21 116.   39.9 108.  111.  112.  118.  119.  124.  116.  124.   114. \n10    99 127.   45.8  90.6  91.9  91.1  91.8  95.9  95.7  94.5 150.    76.4\n# … with 189 more rows, and 4 more variables: summer <dbl>, autumn <dbl>,\n#   winter <dbl>, annual <dbl>\n\n\n\nCode#栅格化每一列数据，存入data_grid中，以进行画图\n#数据表列名依次为:lon,lat,Mon,Tue,Wed,……,annual\nlibrary(tidyverse)\n\ndata_grid<-data.frame(lon=NA,lat=NA,value=NA,tag=NA)\n# time_vec<-c('annual','spring','summer','autumn','winter',\n#             'Mon','Tue','Wed','Thu','Fri','Sat','Sun')\n\ntime_vec<-c('spring','summer','autumn','winter')\n\nfor (i in time_vec)\n{\n  annual_loess<-loess(data[,which(colnames(data)==i)][[1]]~lon+lat,data=data)\n  lon_grid<-seq(min(data$lon),max(data$lon),0.25)\n  lat_grid<-seq(min(data$lat),max(data$lat),0.25)\n  data.fit<-expand.grid(lon=lon_grid,lat=lat_grid)\n  annual_predict<-as.data.frame(predict(annual_loess,newdata=data.fit))\n  annual_predict$lon<-row.names(annual_predict)\n  annual_grid<-gather(annual_predict,lat,value,-lon)\n  annual_grid$lon<-as.numeric(str_sub(annual_grid$lon,str_locate(annual_grid$lon,'=')[,1]+1))\n  annual_grid$lat<-as.numeric(str_sub(annual_grid$lat,str_locate(annual_grid$lat,'=')[,1]+1)) \n  annual_grid$tag<-i\n  data_grid<-rbind(data_grid,annual_grid)\n}\ndata_grid<-data_grid[!is.na(data_grid$tag),]\ndata_grid$tagnew<-factor(data_grid$tag,ordered=TRUE,levels=time_vec)\nggplot() + \n  stat_contour(geom=\"polygon\",data=data_grid, aes(x=lon, y=lat, z=value,fill=..level..),binwidth=0.01)+\n  scale_fill_distiller(palette = \"Spectral\")+\n  facet_wrap(~tagnew,ncol=2)"
  },
  {
    "objectID": "ex.html",
    "href": "ex.html",
    "title": "■ Practical",
    "section": "",
    "text": "I have nothing to say!"
  },
  {
    "objectID": "ex_ncov2019.html",
    "href": "ex_ncov2019.html",
    "title": "\n17  ncov2019\n",
    "section": "",
    "text": "remotes::install_github(\"GuangchuangYu/nCov2019\")\nremotes::install_github(\"GuangchuangYu/chinamap\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Approaching ggplot2",
    "section": "",
    "text": "The ggplot2 cookbook was formatted using the Quarto Document in Rstudio. To learn more about Quarto books visit https://quarto.org/docs/books.\nI assume you have already installed R (https://www.r-project.org) (R Core Team 2022) and the RStudio IDE (https://www.rstudio.com).\nNext you can install the rmarkdown package in R:\n\n## Install from CRAN\n#install.packages('rmarkdown')\n\n## Or if you want to test the development version,\n## install from GitHub\n# if (!requireNamespace(\"remotes\"))\n#   install.packages('remotes')\n# remotes::install_github('rstudio/rmarkdown')\n\nIf you want to generate PDF output, you will need to install LaTeX. For R Markdown users who have not installed LaTeX before, we recommend that you install TinyTeX :\n\n# install.packages('tinytex')\n# tinytex::install_tinytex()  # install TinyTeX"
  },
  {
    "objectID": "index.html#所需程序包",
    "href": "index.html#所需程序包",
    "title": "Approaching ggplot2",
    "section": "所需程序包",
    "text": "所需程序包\n\n\n\n\n\n\n程序包\n安装方法\n\n\n\ntidyverse\ninstall.packages(“tidyverse”)\n\n\nplyr\ninstall.packages(“plyr”)\n\n\nggthemes\ninstall.packages(“ggthemes”)\n\n\nggthemr\ninstall.packages(“ggthemr”)\n\n\nggsci\ninstall.packages(“ggsci”)\n\n\nggtech\ndevtools::install_github(“ricardo-bion/ggtech”,dependencies=TRUE)\n\n\nggplotAssist\ninstall.packages(“ggplotAssist”)\n\n\nggplotgui\ninstall.packages(“ggplotgui”)\n\n\nggpubr\ninstall.packages(“ggpubr”)\n\n\neasyGgplot2\ndevtools::install_github(“kassambara/easyGgplot2”)\n\n\ngridExtra\ninstall.packages(“gridExtra”)\n\n\nggplot2\ndevtools::install_github(“hadley/ggplot2”)"
  },
  {
    "objectID": "index.html#参考资料推荐",
    "href": "index.html#参考资料推荐",
    "title": "Approaching ggplot2",
    "section": "参考资料推荐",
    "text": "参考资料推荐\nggplot2:Elegant Graphics for Data Analysis\nR Graphics Cookbook\nggplot2作图函数参考网址"
  },
  {
    "objectID": "ex_ncov2019.html#全球疫情形势",
    "href": "ex_ncov2019.html#全球疫情形势",
    "title": "\n17  ncov2019\n",
    "section": "\n17.1 全球疫情形势",
    "text": "17.1 全球疫情形势\n\nlibrary(nCov2019)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ny = load_nCov2019(lang='zh')# 可改为en\nd = y['global']\n\ndd <- filter(d, time == time(y) & country != '中国') %>% \n  arrange(desc(cum_confirm)) \n\ndd = dd[1:40, ]\ndd$country = factor(dd$country, levels=dd$country)\ndd$angle = 1:40 * 360/40\ni = dd$angle > 90 & dd$cum_confirm > dd$cum_confirm[21]\ndd$angle[i] = dd$angle[i] + 180\ndd$vjust = 1\ndd$vjust[i] = 0\n\nas_tibble(dd)\n\n# A tibble: 40 × 7\n   time       country cum_confirm cum_heal cum_dead angle vjust\n   <date>     <fct>         <int>    <int>    <int> <dbl> <dbl>\n 1 2021-03-19 美国       30360639 22523803   552475     9     1\n 2 2021-03-19 巴西       11787600 10339432   287795    18     1\n 3 2021-03-19 印度       11514331 11083679   159405    27     1\n 4 2021-03-19 俄罗斯      4437938  4049373    94267    36     1\n 5 2021-03-19 英国        4280882  3593136   125926    45     1\n 6 2021-03-19 法国        4181607   278263    91679    54     1\n 7 2021-03-19 意大利      3306711  2655346   103855    63     1\n 8 2021-03-19 西班牙      3212332  2945446    72910    72     1\n 9 2021-03-19 土耳其      2950603  2770638    29777    81     1\n10 2021-03-19 德国        2636434  2401413    75071    90     1\n# … with 30 more rows\n\ndata100_plus<-function(d) d[d$cum_confirm > dd$cum_confirm[21],]\ndata100_minus<-function(d) d[d$cum_confirm < dd$cum_confirm[21],]\n\n\nCodewindowsFonts(jianti=windowsFont(\"dengxian\"))\np <- ggplot(dd, aes(country, cum_confirm, fill=cum_confirm)) + \n  geom_col(width=1, color='grey90') + \n  geom_col(aes(y=I(5)), width=1, fill='grey90', alpha = .2) +       \n  geom_col(aes(y=I(3)), width=1, fill='grey90', alpha = .2) +    \n  geom_col(aes(y=I(2)), width=1, fill = \"white\") +\n  scale_y_log10() + \n  #scale_fill_gradientn(colors=c(\"darkgreen\", \"green\", \"orange\", \"firebrick\",\"red\"), trans=\"log\") + \n  scale_fill_gradientn(colors=c(\"#57868c\",\"#39bc5c\",\"#c5da27\",\"#eda027\",\"#da400c\",\"#c90d47\"),\n                       trans=\"log\")+\n  geom_text(aes(label=paste(country, cum_confirm, sep=\"\\n\"),\n                y = cum_confirm *.8, angle=angle, vjust=vjust),\n            data= data100_plus(dd),\n            size=3, color = \"white\", fontface=\"bold\",family=\"jianti\")  +\n  geom_text(aes(label=paste0(cum_confirm, \"例 \", country), \n                y = cum_confirm * 2, angle=angle+90), \n            data= data100_minus(dd), \n            size=3, vjust=0,fontface=\"bold\",family=\"jianti\") +\n  coord_polar(direction=-1) + \n  theme_void() + \n  theme(legend.position=\"none\")\n\nggplotify::as.ggplot(p, scale=1.25, vjust=-.05, hjust=0)\n\n\n\n全球疫情形势"
  },
  {
    "objectID": "ex_ncov2019.html#section",
    "href": "ex_ncov2019.html#section",
    "title": "\n17  ncov2019\n",
    "section": "\n17.2 ",
    "text": "17.2"
  },
  {
    "objectID": "bas_facet.html",
    "href": "bas_facet.html",
    "title": "\n6  facet()\n",
    "section": "",
    "text": "p<-ggplot(mpg)+aes(cty,hwy)+geom_point()+geom_smooth();p\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np+facet_grid(.~drv)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np<-ggplot(mpg)+aes(cty,hwy)+geom_point()+geom_smooth()+coord_polar(theta = \"y\");p\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np+facet_grid(.~drv)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\nggplot(mpg)+\n  geom_point(aes(cty,hwy,color=class,shape=as.factor(cyl)))+\n  facet_wrap(~class)\n\n\n\n\n\nggplot(mpg,aes(cty,hwy,color=class))+\n  geom_smooth(method=\"lm\",color=\"grey\",size=4)+ \n  geom_point(size=3)+\n  facet_wrap(~class)\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "bas_coord.html",
    "href": "bas_coord.html",
    "title": "\n5  coord()\n",
    "section": "",
    "text": "ggplot(mpg)+\n  geom_bar(aes(manufacturer))+\n  coord_flip()\n\n\n\n\n\nggplot(mpg)+\n  geom_bar(aes(manufacturer))+\n  coord_fixed(ratio=3/2)\n\n\n\n\n\nggplot(mpg)+\n  geom_bar(aes(manufacturer))+\n  coord_polar(theta=\"x\")"
  },
  {
    "objectID": "adv_text.html",
    "href": "adv_text.html",
    "title": "\n9  annotate()\n",
    "section": "",
    "text": "library(ggplot2)\nggplot(mpg,aes(displ, hwy , color = cyl)) + geom_point()\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  annotate(\"rect\",xmin=4.5,xmax=7.1,ymin=0,ymax=27,color=\"red\",alpha=0.3,size=2)\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  annotate(\"segment\",x=2.5,y=20,xend=3,yend=35,color=\"blue\",size=10,alpha=0.1)\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  annotate(\"segment\",x=2.5,y=20,xend=3,yend=35,color=\"blue\",\n           arrow=arrow(end=\"last\",angle=30,length=unit(1,\"cm\")))"
  },
  {
    "objectID": "adv_text.html#geom_text",
    "href": "adv_text.html#geom_text",
    "title": "\n9  annotate()\n",
    "section": "\n9.2 geom_text",
    "text": "9.2 geom_text\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + geom_point()\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  geom_text(label=\"TEST\",color=\"red\")\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  geom_text(aes(label=manufacturer),color=\"red\")\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  geom_text(x=4,y=40,label=\"TEST\",color=\"red\",alpha=0.1)\n\n\n\n\n\nggplot(mpg,aes(displ, hwy , color = cyl)) + \n  geom_point()+\n  geom_text(label=\"TEST\",color=\"red\",vjust=0.3,hjust=-0.2)"
  },
  {
    "objectID": "adv_text.html#实例",
    "href": "adv_text.html#实例",
    "title": "\n9  annotate()\n",
    "section": "\n9.3 实例",
    "text": "9.3 实例\n\nlibrary(plyr)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n✔ purrr   0.3.5      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::arrange()   masks plyr::arrange()\n✖ purrr::compact()   masks plyr::compact()\n✖ dplyr::count()     masks plyr::count()\n✖ dplyr::failwith()  masks plyr::failwith()\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::id()        masks plyr::id()\n✖ dplyr::lag()       masks stats::lag()\n✖ dplyr::mutate()    masks plyr::mutate()\n✖ dplyr::rename()    masks plyr::rename()\n✖ dplyr::summarise() masks plyr::summarise()\n✖ dplyr::summarize() masks plyr::summarize()\n\nlm_labels <- function(dat) {\n    mod <- lm(hwy ~ displ, data=dat)\n    formula <- sprintf(\"italic(y) == %.2f %+.2f * italic(x) \",  round(coef(mod)[1], 2), round(coef(mod)[2], 2))\n    r <- cor(dat$displ, dat$hwy)\n    r2 <- sprintf(\"italic(R^2) == %.2f\", r^2)\n    data.frame(formula=formula, r2=r2, stringsAsFactors=FALSE)}\n\nlabels<-ddply(mpg,\"cyl\",lm_labels);labels[2,]<-c(\"5\",\"数据个数太少\",\"无法拟合\")\n\nWarning in cor(dat$displ, dat$hwy): the standard deviation is zero\n\nlabels\n\n  cyl                               formula                  r2\n1   4 italic(y) == 46.60 -8.29 * italic(x)  italic(R^2) == 0.34\n2   5                          数据个数太少            无法拟合\n3   6 italic(y) == 36.38 -3.98 * italic(x)  italic(R^2) == 0.26\n4   8 italic(y) == 10.97 +1.30 * italic(x)  italic(R^2) == 0.05\n\n\n\nggplot(mpg,aes(displ,hwy))+ \n  geom_point()+\n  facet_grid(cyl~.)+\n  geom_smooth(se=FALSE,method=\"lm\")+\n  geom_text(x=5,y=40,aes(label=formula),data=labels,parse=TRUE,vjust=0)+\n  geom_text(x=5,y=35,aes(label=r2),data=labels,parse=TRUE,vjust=-0.1)\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "bas_geom.html",
    "href": "bas_geom.html",
    "title": "\n3  geom()\n",
    "section": "",
    "text": "library(plyr)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::arrange()   masks plyr::arrange()\n✖ purrr::compact()   masks plyr::compact()\n✖ dplyr::count()     masks plyr::count()\n✖ dplyr::failwith()  masks plyr::failwith()\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::id()        masks plyr::id()\n✖ dplyr::lag()       masks stats::lag()\n✖ dplyr::mutate()    masks plyr::mutate()\n✖ dplyr::rename()    masks plyr::rename()\n✖ dplyr::summarise() masks plyr::summarise()\n✖ dplyr::summarize() masks plyr::summarize()\n\nggplot(mpg, aes(cty, hwy))+geom_point()"
  },
  {
    "objectID": "bas_geom.html#geom_smooth",
    "href": "bas_geom.html#geom_smooth",
    "title": "\n3  geom()\n",
    "section": "\n3.2 geom_smooth()",
    "text": "3.2 geom_smooth()\n\nggplot(mpg, aes(cty, hwy))+geom_smooth() \n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'"
  },
  {
    "objectID": "bas_geom.html#geom_bar",
    "href": "bas_geom.html#geom_bar",
    "title": "\n3  geom()\n",
    "section": "\n3.3 geom_bar()",
    "text": "3.3 geom_bar()\n\nlibrary(ggplot2)\n\n\nggplot()+geom_bar(data=mpg,mapping=aes(manufacturer))\n\n\n\n\n\nggplot()+geom_bar(data=mpg,mapping=aes(class))"
  },
  {
    "objectID": "bas_geom.html#geom_line",
    "href": "bas_geom.html#geom_line",
    "title": "\n3  geom()\n",
    "section": "\n3.4 geom_line()",
    "text": "3.4 geom_line()\n\ndf <- data.frame(x = 1:10, y = c(4, 1, 9, 5, 8, 7, 3, 8, 3, 5))\ndf\n\n    x y\n1   1 4\n2   2 1\n3   3 9\n4   4 5\n5   5 8\n6   6 7\n7   7 3\n8   8 8\n9   9 3\n10 10 5\n\nggplot(df, aes(x, y))+\n  geom_line(size = 10)\n\n\n\nggplot(df, aes(x, y))+\n  geom_step(size = 10)"
  },
  {
    "objectID": "bas_geom.html#实例",
    "href": "bas_geom.html#实例",
    "title": "\n3  geom()\n",
    "section": "\n3.5 实例",
    "text": "3.5 实例\n\ngroup_cyl<-group_by(mpg,cyl)\ndata_sumr<- summarise(group_cyl,avg=mean(hwy),se=sd(hwy)/sqrt(n()))\ndata_sumr\n\n# A tibble: 4 × 3\n    cyl   avg    se\n  <int> <dbl> <dbl>\n1     4  28.8 0.502\n2     5  28.8 0.25 \n3     6  22.8 0.415\n4     8  17.6 0.390\n\n\n\np<-ggplot(data_sumr,aes(cyl, avg)) + geom_line()+geom_point(size=4) \np+geom_errorbar(aes(ymin=avg-se, ymax=avg+se), width=0.1)"
  },
  {
    "objectID": "adv_scale.html",
    "href": "adv_scale.html",
    "title": "\n10  scale()\n",
    "section": "",
    "text": "公共参数name,breaks,labels,limits\n\n\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\np0 <- ggplot(mpg, aes(class))+geom_bar(aes(fill=drv));p0\n\n\n\n\n\n#更改图例名字 #\np0 + scale_fill_discrete(name=\"class\") \n\n\n\n\n\n# 对应指定并更改图例标签 #\np0 + scale_fill_discrete (breaks = c(\"4\", \"r\", \"f\"), \n                          labels = c(\"four\", \"rr\", \"rr\"))\n\n\n\n\n\n# 只显示4和r对应部分# \np0 + scale_fill_discrete (limits=c(\"4\", \"r\")) \n\n\n\n\n\n# 多出一个分类#\np0 + scale_fill_discrete (limits=c(\"4\", \"r\", \"f\", \"6\"))\n\n\n\n\n\n\np1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_point();p1\n\n\n\n\n\np1 + scale_x_discrete(name=\"cyl\") \n\n\n\n\n\np1 + scale_x_discrete(labels = c(\"4\"=\"a\",\"6\"=\"b\",\"8\"=\"c\")) \n\n\n\n\n\np1 + scale_x_discrete(labels = letters[1:3],breaks=c(\"4\",\"6\",\"8\")) \n\n\n\n\n\np1 + scale_x_discrete(labels = c(\"4\"=\"a\",\"6\"=\"b\"))\n\n\n\n\n\np1 + scale_x_discrete(labels = letters[1:3])\n\n\n\n\n\np1 + scale_x_discrete(limits=c(\"4\",\"6\"))\n\nWarning: Removed 14 rows containing missing values (geom_point).\n\n\n\n\n\n\n\np2<-ggplot(mpg,aes(displ, hwy , color = cyl))+geom_point();p2\n\n\n\n\n\np2 +scale_color_continuous (name=\"Cyl\",\n                            breaks=c(7.5,6.2,4.9),\n                            labels=c(\"a\",\"b\",\"c\"))\n\n\n\n\n\np2 +scale_color_continuous (name=\"CYL\",\n                            limits=c(5,6.8))\n\n\n\n\n\n\np3 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_point();p3\n\n\n\n\n\np3 + scale_y_continuous(\"ylab_mpg\")\n\n\n\n\n\np3 + scale_y_continuous(breaks = c(10,20,30))\n\n\n\n\n\np3 + scale_y_continuous(breaks = c(10,20,30), labels=scales::dollar)\n\n\n\n\n\np3 + scale_y_continuous(limits = c(10,30))\n\nWarning: Removed 4 rows containing missing values (geom_point).\n\n\n\n\n\n\np3 + scale_y_reverse() # 纵坐标翻转，小数在上面，大数在下面#\n\n\n\n\n\np3 + scale_y_log10()\n\n\n\n\n\np3 + scale_y_continuous(trans = \"log10\")\n\n\n\n\n\np3 + scale_y_sqrt()"
  },
  {
    "objectID": "adv_scale.html#更改颜色",
    "href": "adv_scale.html#更改颜色",
    "title": "\n10  scale()\n",
    "section": "\n10.2 更改颜色",
    "text": "10.2 更改颜色\n\n更改color/fill\n\n\n10.2.1 离散型 例 1\n\np0 <- ggplot(mpg, aes(class))+geom_bar(aes(fill=drv));p0 \n\n\n\n\n\np0 + scale_fill_manual(values=c(\"red\", \"blue\", \"green\")) # 直接指定三个颜色# \n\n\n\n\n\np0 + scale_color_hue(h=c(15,100)) #前面使用fill分组，用color系列无效#\n\n\n\n\n\np0 + scale_fill_brewer(palette = \"Greens\",direction = -1)\n\n\n\n\n\np0 + scale_fill_grey(start=1, end=0.5)#0为黑，1为白#\n\n\n\n\n\n10.2.2 离散型 例 2\n\nx <- sample(LETTERS,13); y <- 1:13\nx\n\n [1] \"L\" \"N\" \"H\" \"V\" \"M\" \"Z\" \"D\" \"W\" \"E\" \"K\" \"B\" \"Q\" \"G\"\n\n\n\ny\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13\n\n\n\np<-ggplot()+geom_col(data=NULL,aes(x,y,fill=x));p\n\n\n\n\n\np+scale_fill_brewer()\n\nWarning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Blues is 9\nReturning the palette you asked for with that many colors\n\n\n\n\n\n\np+scale_fill_brewer(palette=\"YlOrRd\")\n\nWarning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette YlOrRd is 9\nReturning the palette you asked for with that many colors\n\n\n\n\n\n\nx<-x[1:8];y<-y[1:8]\nx\n\n[1] \"L\" \"N\" \"H\" \"V\" \"M\" \"Z\" \"D\" \"W\"\n\n\n\ny\n\n[1] 1 2 3 4 5 6 7 8\n\n\n\np<-ggplot()+geom_col(data=NULL,aes(x,y,fill=x));p\n\n\n\n\n\np+scale_fill_brewer()\n\n\n\n\n\np+scale_fill_brewer(palette=\"YlOrRd\")\n\n\n\n\n\n10.2.3 连续型 例 1\n\np1<-ggplot(mpg,aes(displ, hwy , color = cyl))+geom_point();p1\n\n\n\n\n\np1 + scale_color_gradient2(low = \"white\", mid = \"red\", high = \"black\") \n\n\n\n\n\np1 + scale_color_gradientn(colours = terrain.colors(10))\n\n\n\n\n\np1 + scale_color_distiller(palette = \"Spectral\")\n\n\n\n\n\n10.2.4 连续型 例 2\n\np<-ggplot(faithfuld, aes(waiting, eruptions)) + geom_raster(aes(fill = density));p\n\n\n\n\n\nmax(faithfuld$density);min(faithfuld$density)  \n\n[1] 0.0369878\n\n\n[1] 1.25925e-24\n\n\n\np + scale_fill_gradient(limits=c(0.001,0.004))   \n\n\n\n\n\np + scale_fill_gradient(low = 'blue', high = 'red')\n\n\n\n\n\np + scale_fill_gradient2(low = 'blue', high = 'red')  \n\n\n\n\n\np + scale_fill_gradient2(low = 'blue', high = 'red', midpoint = 0.02)\n\n\n\n\n\np + scale_fill_gradientn(colours = c('black','blue','red','white'))  \n\n\n\n\n\np + scale_fill_gradientn(colours = topo.colors(10))  \n\n\n\n\n\np + scale_fill_gradientn(colours = terrain.colors(10))  \n\n\n\n\n\np + scale_fill_gradientn(colours = heat.colors(10))\n\n\n\n\n\np + scale_fill_gradientn(colours = cm.colors(10))\n\n\n\n\n\np + scale_fill_distiller(palette = \"Spectral\")"
  },
  {
    "objectID": "adv_scale.html#scale_color_identity",
    "href": "adv_scale.html#scale_color_identity",
    "title": "\n10  scale()\n",
    "section": "\n10.3 scale_color_identity()",
    "text": "10.3 scale_color_identity()\n\npp1<-ggplot(mpg,aes(displ, hwy , color = \"blue\"))+geom_point();pp1\n\n\n\n\n\npp1+scale_color_identity( )\n\n\n\n\n\ncol <- c(\"red\",\"yellow\",\"blue\",\"black\")\nval <- abs(rnorm(4))*10;val\n\n[1]  7.497713  5.036814 14.489637  7.368140\n\n\n\ndata<-data.frame(\"col\"=col,\"val\"=val)\ndata\n\n     col       val\n1    red  7.497713\n2 yellow  5.036814\n3   blue 14.489637\n4  black  7.368140\n\n\n\npp2<-ggplot(data,aes(x=col,y=val,fill=col))+geom_col();pp2\n\n\n\n\n\npp2+scale_fill_identity()"
  },
  {
    "objectID": "adv_scale.html#scale_shape_",
    "href": "adv_scale.html#scale_shape_",
    "title": "\n10  scale()\n",
    "section": "\n10.4 scale_shape_**()",
    "text": "10.4 scale_shape_**()\n\ndf_shapes <- data.frame(shape = 0:24)\ndf_shapes\n\n   shape\n1      0\n2      1\n3      2\n4      3\n5      4\n6      5\n7      6\n8      7\n9      8\n10     9\n11    10\n12    11\n13    12\n14    13\n15    14\n16    15\n17    16\n18    17\n19    18\n20    19\n21    20\n22    21\n23    22\n24    23\n25    24\n\n\n\nggplot(df_shapes, aes(0, 0, shape = shape)) +\n  geom_point(aes(shape = shape), size = 5, fill = 'red') +\n  scale_shape_identity() +\n  facet_wrap(~shape)\n\n\n\n\n\np<-ggplot(mpg)+\n   geom_point(aes(cty, hwy, shape = manufacturer));p\n\nWarning: The shape palette can deal with a maximum of 6 discrete values because\nmore than 6 becomes difficult to discriminate; you have 15. Consider\nspecifying shapes manually if you must have them.\n\n\nWarning: Removed 112 rows containing missing values (geom_point).\n\n\n\n\n\n\np+ scale_shape_manual(values=seq(1,15,1))"
  },
  {
    "objectID": "adv_scale.html#scale_linetype_",
    "href": "adv_scale.html#scale_linetype_",
    "title": "\n10  scale()\n",
    "section": "\n10.5 scale_linetype_**()",
    "text": "10.5 scale_linetype_**()\n\ndf_lines <- data.frame(\n    linetype = factor(\n        1:4,\n        labels = c(\"solid\", \"longdash\", \"dashed\", \"dotted\")\n    )\n)\ndf_lines\n\n  linetype\n1    solid\n2 longdash\n3   dashed\n4   dotted\n\n\n\nggplot(df_lines) +\n    geom_hline(aes(linetype = linetype, yintercept = 0), size = 2) +\n    scale_linetype_identity() +\n    facet_grid(linetype ~ .) \n\n\n\n\n\ndf_lines <- data.frame(\n    linetype = factor(\n        1:13,\n        labels = as.character(seq(0,12,1))\n    )\n)\nggplot(df_lines) +\n    geom_hline(aes(linetype = linetype, yintercept = 0), size = 2) +\n    facet_grid(linetype ~ .)"
  },
  {
    "objectID": "adv_scale.html#scale_size_",
    "href": "adv_scale.html#scale_size_",
    "title": "\n10  scale()\n",
    "section": "\n10.6 scale_size_**()",
    "text": "10.6 scale_size_**()\n\np<-ggplot(mpg)+\n   geom_point(aes(displ, hwy, size = hwy),alpha=0.2);p\n\n\n\n\n\np+ scale_size()\n\n\n\n\n\np+scale_size(range=c(0,10))\n\n\n\n\n\np+scale_size_area(max_size=10)\n\n\n\n\n\np+scale_radius(range=c(0,10))"
  },
  {
    "objectID": "adv_guide.html",
    "href": "adv_guide.html",
    "title": "\n11  guides()\n",
    "section": "",
    "text": "guides(); guide_colorbar(); guide_legend()"
  },
  {
    "objectID": "adv_guide.html#scale__-vs-guides",
    "href": "adv_guide.html#scale__-vs-guides",
    "title": "\n11  guides()\n",
    "section": "\n11.1 scale_*_* VS guides()",
    "text": "11.1 scale_*_* VS guides()\n\ndf <- reshape2::melt(outer(1:4, 1:4), varnames = c(\"X1\", \"X2\"))\np1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value));p1\n\n\n\n\n\np1 + scale_fill_continuous(guide = \"legend\")\n\n\n\n\n\np1 + scale_fill_continuous(guide = guide_legend())\n\n\n\n\n\np1 + scale_fill_continuous(guide = guide_legend(title=NULL))\n\n\n\n\n\np1+guides(fill = \"legend\")\n\n\n\n\n\np1+guides(fill = guide_legend())\n\n\n\n\n\np1+guides(fill = guide_colorbar(title = NULL))\n\n\n\n\n\np2<-p1 + guides(fill =  guide_legend( title = \"LEFT\", \n                                  title.position = \"left\",\n                                  title.theme = element_text( size = 15,\n                                                              face = \"italic\",\n                                                              colour = \"red\",\n                                                              angle = 0\n                                                            ),\n                                  label.position = \"bottom\",\n                                  label.hjust = 0.5,\n                                  label.vjust = 1,\n                                  label.theme = element_text(angle = 90),\n                                  direction = \"horizontal\",\n                                  keywidth = 3, \n                                  keyheight = 1,\n                                  nrow=2,\n                                  byrow=TRUE\n                               )\n            );p2\n\n\n\n\n\np3<-p1 + guides(fill =  guide_colorbar( title = \"LEFT\", \n                                  title.position = \"left\",\n                                  title.theme = element_text( size = 15,\n                                                              face = \"italic\",\n                                                              colour = \"red\",\n                                                              angle = 0\n                                                            ),\n                                  label.position = \"bottom\",\n                                  label.hjust = 0.5,\n                                  label.vjust = 1,\n                                  label.theme = element_text(angle = 90),\n                                  direction = \"horizontal\",\n                                  barwidth = 10, barheight = 10,\n                                  nbin = 100,\n                                  draw.ulim = FALSE, \n                                  draw.llim = FALSE,\n                                  ticks=TRUE\n                                  )\n            );p3\n\n\n\n\n\np2+theme(legend.position=\"top\")\n\n\n\n\n\np3+theme(legend.position = c(0.3,0.5))"
  },
  {
    "objectID": "adv_guide.html#colorbar-vs-legend",
    "href": "adv_guide.html#colorbar-vs-legend",
    "title": "\n11  guides()\n",
    "section": "\n11.2 colorbar VS legend",
    "text": "11.2 colorbar VS legend\n\nmydata <- data.frame(  x = runif(100,0,100),  \n                        y = runif(100,0,100),  \n                        z = runif(100,0,100),  \n                        f = runif(100,0,100),  \n                        g = rep(LETTERS[1:5],each = 20))\np <- ggplot(mydata,aes(x,y))+  geom_point(aes(fill = z,size = f ),shape = 21);p\n\n\n\n\n\ncolorbar = guide_colorbar(  title = 'Colorbar',  \n                            title.position = 'left',  #left,right,top,bottom  \n                            title.theme = element_text(size = 15,face = \"italic\",colour = \"red\",angle = 45),  \n                            title.hjust =  .5,  \n                            title.vjust =  0,  \n                            label = TRUE,  \n                            label.position = 'top',  \n                            label.theme = element_text(size = 15,face = \"italic\",colour = \"red\",angle = 45),  \n                            label.hjust = .5,  \n                            label.vjust = .5,  \n                            barwidth = unit(6,\"cm\"),  #Default value is legend.key.width or legend.key.size  \n                            barheight = unit(1.2,\"cm\"),  #Default value is legend.key.height or legend.key.size  \n                            nbin = 20,  \n                            ticks = TRUE,  \n                            draw.ulim = TRUE,  \n                            draw.llim = TRUE,  \n                            direction = \"horizontal\",  #\"horizontal\" or \"vertical.\"  \n                            reverse = TRUE,  \n                            order = 1)\nsize_legend = guide_legend(  title = 'legend',  \n                             title.position = \"left\",  \n                             title.hjust =  .5,  \n                             title.vjust = .5,  \n                             title.theme = element_text(size = 15,face = \"italic\",colour = \"red\",angle = 45),  \n                             keywidth = 2.5,  \n                             keyheight = 2,  \n                             label.position = \"bottom\",  \n                             direction = \"horizontal\",  \n                             label = TRUE,  \n                             label.hjust = 0.5,  \n                             label.vjust = 0.5,  \n                             label.theme = element_text(size = 15,face = \"italic\",colour = \"red\",angle = 45),  \n                             nrow = 2,  \n                             byrow = TRUE,  \n                             reverse = TRUE,  \n                             order = 2)\np + scale_fill_gradient(breaks = seq(0,100,10)) +  \n    scale_size_area(breaks = seq(0,100,10))  +  \n    guides(fill = colorbar,size = size_legend)\n\n\n\n\n\np+scale_fill_gradient(breaks=seq(0,100,10),guide=colorbar)+\n  scale_size_area(breaks = seq(0,100,10),guide=size_legend)"
  },
  {
    "objectID": "adv_guide.html#删除图例",
    "href": "adv_guide.html#删除图例",
    "title": "\n11  guides()\n",
    "section": "\n11.3 删除图例",
    "text": "11.3 删除图例\n\nggplot(mpg)+\n  geom_point(aes(cty, \n                 hwy, \n                 shape = manufacturer))+\n  scale_shape_manual(values=seq(0,15,1),\n                     guide=FALSE)\n\nWarning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\nuse `guide = \"none\"` instead.\n\n\n\n\n\n\nggplot(mpg)+\n  geom_point(aes(cty, \n                 hwy, \n                 shape = manufacturer))+\n  scale_shape_manual(values=seq(0,15,1),\n                     guide=\"none\")\n\n\n\n\n\nggplot(mpg)+\n  geom_point(aes(cty, \n                 hwy, \n                 color = manufacturer))+\n  #guides(color=FALSE)+\n  scale_color_discrete(guide=FALSE)\n\nWarning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\nuse `guide = \"none\"` instead."
  },
  {
    "objectID": "adv_theme.html",
    "href": "adv_theme.html",
    "title": "\n14  theme()\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggthemr)\nlibrary(ggthemes)\nlibrary(ggsci)\nlibrary(ggpubr)\n\n\nAttaching package: 'ggpubr'\n\nThe following objects are masked from 'package:ggthemr':\n\n    rotate_x_text, rotate_y_text\n\n\n\np<-ggplot(mpg, aes(class,color=drv,fill=drv)) +geom_bar() \np+theme_grey()\n\n\n\n\n\np+theme_bw()\n\n\n\n\n\np+theme_linedraw()\n\n\n\n\n\np+theme_light()\n\n\n\n\n\np+theme_dark()\n\n\n\n\n\np+theme_minimal()\n\n\n\n\n\np+theme_classic()"
  },
  {
    "objectID": "adv_theme.html#ggthemes",
    "href": "adv_theme.html#ggthemes",
    "title": "\n14  theme()\n",
    "section": "\n14.2 ggthemes",
    "text": "14.2 ggthemes\n\np<-ggplot(mpg, aes(class,color=drv,fill=drv)) +geom_bar() \np+theme_base()\n\n\n\n\n\np+theme_calc()\n\n\n\n\n\np+theme_economist()\n\n\n\n\n\np+theme_excel()\n\n\n\n\n\np+theme_few()\n\n\n\n\n\np+theme_fivethirtyeight()\n\n\n\n\n\np+theme_gdocs()\n\n\n\n\n\np+theme_hc()\n\n\n\n\n\np+theme_par()\n\n\n\n\n\np+theme_pander()\n\n\n\n\n\np+theme_solarized()\n\n\n\n\n\np+theme_stata()\n\n\n\n\n\np+theme_tufte()\n\n\n\n\n\np+theme_wsj()"
  },
  {
    "objectID": "adv_theme.html#ggthemr",
    "href": "adv_theme.html#ggthemr",
    "title": "\n14  theme()\n",
    "section": "\n14.3 ggthemr",
    "text": "14.3 ggthemr\n\nremotes::install_github(‘Mikata-Project/ggthemr’)\n\n\nggthemr('flat')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('flat dark')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('camouflage')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('chalk')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('copper')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('dust')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('earth')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('fresh')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('grape')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('grass')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('greyscale')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('light')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('lilac')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('pale')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('sea')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('sky')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()\n\n\nggthemr('solarized')\nggplot(mpg, aes(class,color=drv)) +geom_bar()\n\n\n\nggthemr_reset()"
  },
  {
    "objectID": "adv_theme.html#ggsci",
    "href": "adv_theme.html#ggsci",
    "title": "\n14  theme()\n",
    "section": "\n14.4 ggsci",
    "text": "14.4 ggsci\n\n详见：https://nanx.me/ggsci/articles/ggsci.html\n\n\ndata(\"diamonds\")\np1 = ggplot(subset(diamonds, carat >= 2.2),\n       aes(x = table, y = price, colour = cut)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"loess\", alpha = 0.05, size = 1, span = 1) +\n  theme_bw()\np1+scale_color_npg()\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "adv_theme.html#元素调整函数",
    "href": "adv_theme.html#元素调整函数",
    "title": "\n14  theme()\n",
    "section": "\n14.5 元素调整函数",
    "text": "14.5 元素调整函数\n\nplot <- ggplot(mpg, aes(displ, hwy)) + geom_point()\nplot + theme(\n  panel.background = element_blank(),\n  axis.text = element_text(colour = \"red\"),\n  axis.line = element_line(arrow = arrow()),\n  plot.background = element_rect(fill = \"white\")\n)"
  },
  {
    "objectID": "adv_theme.html#主题中其它元素调整",
    "href": "adv_theme.html#主题中其它元素调整",
    "title": "\n14  theme()\n",
    "section": "\n14.6 主题中其它元素调整",
    "text": "14.6 主题中其它元素调整\n\np<-ggplot(mpg,aes(drv, fill = class)) + geom_bar()\np+theme(legend.justification=c(\"right\", \"top\"))\n\n\n\n\n\np+theme(legend.box.background = element_rect(),\n        legend.box.margin = margin(6, 6, 6, 6))\n\n\n\n\n\np+theme(legend.key = element_rect(fill = \"white\",colour = \"black\",\n                                  size=0.8,linetype=3))\n\n\n\n\n\np+theme(legend.position=c(0.9,0.8))"
  },
  {
    "objectID": "adv_theme.html#ggpubr",
    "href": "adv_theme.html#ggpubr",
    "title": "\n14  theme()\n",
    "section": "\n14.7 ggpubr",
    "text": "14.7 ggpubr\n\nhttp://www.alboukadel.com/\n\n\n14.7.1 模拟数据\n\nset.seed(1234) \nwdata <- data.frame(\nsex = factor(rep(c(\"F\", \"M\"), each=200)), \nweight = c(rnorm(200, 55), rnorm(200, 58)))\n\n\n14.7.2 ggdensity\n\nggdensity(wdata, x = \"weight\", add = \"mean\", rug = TRUE, \n          color = \"sex\", fill = \"sex\", palette = c(\"#00AFBB\", \"#E7B800\"))\n\n\n\n\n\n14.7.3 gghistogram\n\ngghistogram(wdata, x = \"weight\", add = \"mean\", rug = TRUE, \n            color = \"sex\", fill = \"sex\", palette = c(\"#00AFBB\", \"#E7B800\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n14.7.4 gghistogram\n\ngghistogram(wdata, x = \"weight\", add = \"mean\", rug = TRUE, \n            fill = \"sex\", palette = c(\"#00AFBB\", \"#E7B800\"), \n            add_density = TRUE)\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n14.7.5 ggbarplot\n\nggbarplot(ToothGrowth, x = \"dose\", y = \"len\", add = \"mean_se\", \n          label = TRUE, lab.vjust = -1.9)\n\n\n\nggbarplot(ToothGrowth, x = \"dose\", y = \"len\", add = \"mean_se\",\n          error.plot = \"upper_errorbar\")\n\n\n\nggbarplot(ToothGrowth, x = \"dose\", y = \"len\", add = c(\"mean_se\", \"dotplot\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n\n\n\n\n\n\ndata(\"mtcars\") \ndf2 <- mtcars \ndf2$cyl <- factor(df2$cyl) \ndf2$name <- rownames(df2)\nggbarplot(df2, x=\"name\", y=\"mpg\", fill = \"cyl\", \n          color = \"white\", palette = \"jco\", sort.val = \"desc\",\n          sort.by.groups=FALSE,x.text.angle=60)\n\n\n\n\n\ndf2$mpg_z <- (df2$mpg-mean(df2$mpg))/sd(df2$mpg)\ndf2$mpg_grp <- factor(ifelse(df2$mpg_z<0, \"low\", \"high\"), levels = c(\"low\", \"high\"))\nggbarplot(df2, x=\"name\", y=\"mpg_z\", fill = \"mpg_grp\", \n          color = \"white\", palette = \"jco\", sort.val = \"asc\", \n          sort.by.groups = FALSE, x.text.angle=60, ylab = \"MPG z-score\", \n          xlab = FALSE, legend.title=\"MPG Group\")\n\n\n\n\n\nggbarplot(df2, x=\"name\", y=\"mpg_z\", fill = \"mpg_grp\", \n          color = \"white\", palette = \"jco\", sort.val = \"desc\", \n          sort.by.groups = FALSE, x.text.angle=90, ylab = \"MPG z-score\", \n          xlab = FALSE, legend.title=\"MPG Group\", \n          rotate=TRUE, ggtheme = theme_minimal())\n\n\n\n\n\n14.7.6 ggboxplot\n\nggboxplot(ToothGrowth, x=\"dose\", y=\"len\", color = \"dose\", \n          palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n          add = \"jitter\", shape=\"dose\")\n\n\n\n\n\ndf<-ToothGrowth\n\nggboxplot(df, x = \"dose\", y = \"len\", width = 0.8)\n\n\n\nggboxplot(df, \"dose\", \"len\", orientation = \"horizontal\")\n\n\n\nggboxplot(df, x = \"dose\", y = \"len\", notch = TRUE)\n\n\n\nggboxplot(df, x = \"dose\", y = \"len\", add = \"dotplot\")\n\nBin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n\n\n\n\n\n\nmy_comparisons <- list( c(\"0.5\", \"1\"), c(\"1\", \"2\"), c(\"0.5\", \"2\") ) \nggboxplot(ToothGrowth, x = \"dose\", y = \"len\", color = \"dose\")+\n  stat_compare_means(comparisons = my_comparisons, \n                     label.y = c(29, 35, 40))+ \n  stat_compare_means(label.y = 45)\n\nWarning in wilcox.test.default(c(4.2, 11.5, 7.3, 5.8, 6.4, 10, 11.2, 11.2, :\ncannot compute exact p-value with ties\n\n\nWarning in wilcox.test.default(c(4.2, 11.5, 7.3, 5.8, 6.4, 10, 11.2, 11.2, :\ncannot compute exact p-value with ties\n\n\nWarning in wilcox.test.default(c(16.5, 16.5, 15.2, 17.3, 22.5, 17.3, 13.6, :\ncannot compute exact p-value with ties\n\n\n\n\n\n\n14.7.7 ggpie\n\ndf <- data.frame(group = c(\"Male\", \"Female\", \"Child\"), \n                 value = c(25, 25, 50))\nlabs <- paste0(df$group, \" (\", df$value, \"%)\")\nggpie(df, \"value\", label = labs, fill = \"group\", \n      color = \"white\", palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\nggpie(df, \"value\", label = labs, lab.pos = \"in\", \n      lab.font = \"white\", fill = \"group\", color = \"white\", \n      palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n\n\n14.7.8 ggscatter\n\ndata(\"mtcars\") \ndf <- mtcars; df$cyl <- as.factor(df$cyl)\nggscatter(df, x = \"wt\", y = \"mpg\", color = \"cyl\", \n          add = \"reg.line\", conf.int = TRUE)+\n  stat_cor(aes(color = cyl), label.x = 3)\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\nggscatter(df, x = \"wt\", y = \"mpg\", color = \"cyl\", shape = \"cyl\", \n          palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n          ellipse = TRUE, mean.point = TRUE, star.plot = TRUE)\n\n\n\n\n\n14.7.9 ggpaired\n\nggpaired(ToothGrowth, x = \"supp\", y = \"len\", color = \"supp\", \n         line.color = \"gray\", line.size = 0.4)\n\n\n\n\n\nggpaired(ToothGrowth, x = \"supp\", y = \"len\", color = \"supp\", \n         line.color = \"gray\", line.size = 0.4)+ \n  stat_compare_means(paired = TRUE)\n\n\n\n\n\n14.7.10 ggviolin\n\nggviolin(ToothGrowth, x=\"dose\", y=\"len\", fill = \"dose\", \n         palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n         add = \"boxplot\", add.params = list(fill=\"white\"))+ \n  stat_compare_means(comparisons = my_comparisons, label = \"p.signif\")+\n  stat_compare_means(label.y = 50)\n\nWarning in wilcox.test.default(c(4.2, 11.5, 7.3, 5.8, 6.4, 10, 11.2, 11.2, :\ncannot compute exact p-value with ties\n\n\nWarning in wilcox.test.default(c(4.2, 11.5, 7.3, 5.8, 6.4, 10, 11.2, 11.2, :\ncannot compute exact p-value with ties\n\n\nWarning in wilcox.test.default(c(16.5, 16.5, 15.2, 17.3, 22.5, 17.3, 13.6, :\ncannot compute exact p-value with ties\n\n\n\n\n\n\n14.7.11 ggdotchart\n\nggdotchart(df2, x=\"name\", y=\"mpg\", color = \"cyl\", \n           palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n           sorting = \"ascending\", add = \"segments\", ggtheme = theme_pubr())\n\n\n\n\n\nggdotchart(df2, x=\"name\", y=\"mpg\", color = \"cyl\", \n           palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n           sorting = \"descending\", add = \"segments\", rotate = TRUE, \n           group = \"cyl\", dot.size = 6, label = round(df2$mpg), \n           font.label = list(color=\"white\", size=9, vjust=0.5), \n           ggtheme = theme_pubr())\n\n\n\n\n\nggdotchart(df2, x = \"name\", y = \"mpg_z\",  color = \"cyl\",     \n           palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n           sorting = \"descending\",  add = \"segments\", \n           add.params = list(color = \"lightgray\", size = 2), \n           group = \"cyl\", dot.size = 6,                                 \n           label = round(df2$mpg_z,1),                        \n           font.label = list(color = \"white\", size = 9, \n                             vjust = 0.5),               \n           ggtheme = theme_pubr())+\n  geom_hline(yintercept = 0, linetype = 2, color = \"lightgray\")\n\n\n\n\n\nggdotchart(df2, x=\"name\", y=\"mpg\", color = \"cyl\", \n           palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n           sorting = \"descending\", rotate = TRUE, dot.size = 2, y.text.col=TRUE, \n           ggtheme = theme_pubr())+ \n  theme_cleveland()\n\nWarning: Vectorized input to `element_text()` is not officially supported.\nResults may be unexpected or may change in future versions of ggplot2."
  }
]