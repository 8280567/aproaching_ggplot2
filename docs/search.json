[
  {
    "objectID": "adv_exam.html",
    "href": "adv_exam.html",
    "title": "\n16  Example\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nggplot()+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()+\n  geom_polygon(aes(x=c(200,700,700,200),y=c(50,50,600,600)),fill=\"brown\",color=\"white\")+\n  geom_polygon(aes(x=c(50,450,850),y=c(600,830,600)),color=\"black\",fill=\"black\")+\n  geom_polygon(aes(c(300,450,450,300),c(50,50,350,350)),fill=\"orange\",color=\"white\")+\n  geom_polygon(aes(c(375,380,380,375),c(50,50,350,350)),fill=\"grey\",color=\"white\")+\n  geom_polygon(aes(c(355,400,400,355),c(200,200,204,204)),fill=\"black\")+\n  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+\n  geom_polygon(aes(x=c(500,650,650,500),y=c(400,400,550,550)),fill=\"white\",color=\"white\")+\n  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color=\"red\")+\n  geom_polygon(aes(x=c(575,576,576,575),y=c(400,400,550,550)),color=\"black\")+\n  geom_polygon(aes(x=c(500,650,650,500),y=c(475,475,476,476)),color=\"black\")+\n  geom_polygon(aes(x=c(620,670,670,620),y=c(620,620,800,800)),fill=\"black\",color=\"black\")+\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")\n\n\n\n\n\nlibrary(readxl)\ndata <- read_excel(\"data/data.xlsx\",1)\ndata\n\n# A tibble: 38 × 7\n      ID label type      x     y fill   color\n   <dbl> <chr> <chr> <dbl> <dbl> <chr>  <chr>\n 1     1 墙    qiang   200    50 brown  white\n 2     1 墙    qiang   700    50 brown  white\n 3     1 墙    qiang   700   600 brown  white\n 4     1 墙    qiang   200   600 brown  white\n 5     2 房顶  ding     50   600 black  black\n 6     2 房顶  ding    450   830 black  black\n 7     2 房顶  ding    850   600 black  black\n 8     3 门    men     300    50 orange white\n 9     3 门    men     450    50 orange white\n10     3 门    men     450   350 orange white\n# … with 28 more rows\n\n\n\n\nCodelibrary(tidyverse)\nggplot(data=NULL,aes(x,y,fill=fill,color=color))+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_fill_identity()+\n  scale_color_identity()+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()+\n  geom_polygon(data=data[which(data$type==\"qiang\"),])+   #墙\n  geom_polygon(data=data[which(data$type==\"ding\"),])+    #房顶\n  geom_polygon(data=data[which(data$type==\"men\"),])+     #门\n  geom_polygon(data=data[which(data$type==\"menfeng\"),])+ #门缝\n  geom_polygon(data=data[which(data$type==\"menshuan\"),])+#门栓\n  geom_point(data=data[which(data$type==\"menhuan\"),],shape=1,size=2)+ #门环\n  geom_polygon(data=data[which(data$type==\"chuanghu\"),])+ #窗户\n  geom_point(data=data[which(data$type==\"chuanghudong\"),],shape=1,size=rel(18),color=\"red\")+ #窗户洞\n  geom_polygon(data=data[which(data$type==\"chuanghufeng1\"),])+ #窗户缝1\n  geom_polygon(data=data[which(data$type==\"chuanghufeng2\"),])+ #窗户缝2\n  geom_polygon(data=data[which(data$type==\"yancong\"),])+ #烟囱\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")\n\n\n\n\n\n\nCodeggplot()+\n  geom_polygon(data=data,aes(x,y,fill=fill,color=color,group=ID))+\n  geom_point(aes(x=c(391,365),y=c(196,196)),shape=1,size=2)+\n  geom_point(aes(x=575,y=475),shape=1,size=rel(18),color=\"red\")+\n  geom_polygon(aes(x=40*sin(seq(-10,10,0.01))+700,y=18*cos(seq(-10,10,0.01))+850),fill=\"grey\",color=\"black\")+\n  geom_polygon(aes(x=30*sin(seq(-10,10,0.01))+800,y=14*cos(seq(-10,10,0.01))+900),fill=\"grey\",color=\"black\")+\n  scale_x_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_y_continuous(name=NULL,breaks=NULL,label=NULL,limits=c(0,1000))+\n  scale_fill_identity()+\n  scale_color_identity()+\n  theme(panel.background = element_rect(fill=\"white\"))+\n  coord_fixed()"
  },
  {
    "objectID": "adv_exam.html#程序包下载量时序图",
    "href": "adv_exam.html#程序包下载量时序图",
    "title": "\n16  Example\n",
    "section": "\n16.2 程序包下载量时序图",
    "text": "16.2 程序包下载量时序图\n\n统计Hadley Wickman主流的程序包 包括：‘tidyverse’,‘ggplot2’,‘dplyr’,‘tidyr’,‘stringr’,‘lubridate’ 统计截止到目前的下载量\n\n\nCodelibrary(tidyverse)\nlibrary(cranlogs)\ndata1=cran_downloads(package=c('tidyverse','ggplot2','dplyr','tidyr',\n                               'stringr','lubridate'),\n                     from = \"2012-01-01\", \n                     to = \"2022-09-30\") \nas_tibble(data1)\n\n# A tibble: 23,556 × 3\n   date       count package  \n   <date>     <dbl> <chr>    \n 1 2012-01-01     0 tidyverse\n 2 2012-01-02     0 tidyverse\n 3 2012-01-03     0 tidyverse\n 4 2012-01-04     0 tidyverse\n 5 2012-01-05     0 tidyverse\n 6 2012-01-06     0 tidyverse\n 7 2012-01-07     0 tidyverse\n 8 2012-01-08     0 tidyverse\n 9 2012-01-09     0 tidyverse\n10 2012-01-10     0 tidyverse\n# … with 23,546 more rows\n\n\n\nCodelibrary(ggthemr)\nggthemr(\"flat\")\nggplot(data1,aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\ndata_new=head(sort(data1$count,TRUE),10) #排序，列出前十个，然后去掉\nas_tibble(data_new)\n\n# A tibble: 10 × 1\n      value\n      <dbl>\n 1 11692582\n 2   835133\n 3   208155\n 4   173066\n 5   166780\n 6   139752\n 7   134217\n 8   127256\n 9   125399\n10   122608\n\ndata_tidy=data1[!(data1$count%in%data_new) & data1$package==\"tidyverse\",]\nas_tibble(data_tidy)\n\n# A tibble: 3,924 × 3\n   date       count package  \n   <date>     <dbl> <chr>    \n 1 2012-01-01     0 tidyverse\n 2 2012-01-02     0 tidyverse\n 3 2012-01-03     0 tidyverse\n 4 2012-01-04     0 tidyverse\n 5 2012-01-05     0 tidyverse\n 6 2012-01-06     0 tidyverse\n 7 2012-01-07     0 tidyverse\n 8 2012-01-08     0 tidyverse\n 9 2012-01-09     0 tidyverse\n10 2012-01-10     0 tidyverse\n# … with 3,914 more rows\n\n\n\n16.2.1 tidyverse下载量\n\nCodeggthemr(\"flat\")\nggplot(data_tidy,\n       aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\n16.2.2 其它包下载量\n\nCodeggthemr(\"flat\")\nggplot(data1[which(data1$package !=\"tidyverse\"),],aes(date,count,group=package))+ \n  geom_line(aes(colour=package))+ \n  labs(x = \"日期\",y='下载量',\n       title = \"2012~2022[Hadley Wickham]程序包下载量时序图\", \n       subtitle = R.version.string)+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\nCode  ggthemr_reset()\n\n\n\n16.2.3 过去一年的下载量\n\nCodelibrary(cranlogs)\ndata=cran_top_downloads(\"last-month\",count = 20)\nas_tibble(data)\n\n# A tibble: 20 × 5\n    rank package       count from       to        \n   <int> <chr>         <int> <date>     <date>    \n 1     1 ggplot2     2905989 2022-09-12 2022-10-11\n 2     2 rlang       2797340 2022-09-12 2022-10-11\n 3     3 dplyr       2468406 2022-09-12 2022-10-11\n 4     4 vctrs       2343360 2022-09-12 2022-10-11\n 5     5 cli         2234584 2022-09-12 2022-10-11\n 6     6 ragg        2196955 2022-09-12 2022-10-11\n 7     7 textshaping 2163882 2022-09-12 2022-10-11\n 8     8 pillar      2067564 2022-09-12 2022-10-11\n 9     9 lifecycle   2061452 2022-09-12 2022-10-11\n10    10 devtools    1569135 2022-09-12 2022-10-11\n11    11 tibble      1562876 2022-09-12 2022-10-11\n12    12 pkgdown     1546883 2022-09-12 2022-10-11\n13    13 sf          1498433 2022-09-12 2022-10-11\n14    14 stringr     1367417 2022-09-12 2022-10-11\n15    15 tidyr       1344871 2022-09-12 2022-10-11\n16    16 jsonlite    1324942 2022-09-12 2022-10-11\n17    17 stringi     1278953 2022-09-12 2022-10-11\n18    18 tidyselect  1277921 2022-09-12 2022-10-11\n19    19 glue        1276164 2022-09-12 2022-10-11\n20    20 rgeos       1239790 2022-09-12 2022-10-11\n\n\n\nCodelibrary(ggthemr)\nggthemr(\"flat\")\nggplot(data,aes(x=reorder(package,count),y=count))+\n  geom_bar(stat='identity')+\n  labs(x = \"\",y='下载量',\n       title = \"过去一个月R包下载量TOP20\", \n       subtitle = R.version.string)+\n  scale_y_continuous(breaks =seq(1000000,2800000,length=5),\n                     labels=seq(1000000,2800000,length=5))+\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))+\n  coord_flip()\n\n\n\nCode  ggthemr_reset()"
  },
  {
    "objectID": "adv_exam.html#kaggle主要工具使用比",
    "href": "adv_exam.html#kaggle主要工具使用比",
    "title": "\n16  Example\n",
    "section": "\n16.3 kaggle主要工具使用比",
    "text": "16.3 kaggle主要工具使用比\n\nCodelibrary(readxl)\ntools_data<-read_excel(\"data/data.xlsx\",5)\nas_tibble(tools_data)\n\n# A tibble: 15 × 2\n   selections                     count\n   <chr>                          <dbl>\n 1 Bayesian Techniques             2236\n 2 CNNS                            1383\n 3 Decision Trees                  3640\n 4 Ensemble Methods                2078\n 5 Evolutionary Approaches          404\n 6 GANs                             207\n 7 Gradient Boosted Machines       1742\n 8 HMMs                             392\n 9 Markov Logic Networks            355\n10 Neural Networks                 2743\n11 Other                            609\n12 Random Forests                  3378\n13 Regression/Logistic Regression  4636\n14 RNNS                             895\n15 SVMs                            1963\n\nCodebks <- c(0,1460.2, 2920.4, 4380.6, 5840.8) \nggplot(tools_data,aes(x=reorder(selections,count),y=count))+\n  geom_bar(stat=\"identity\")+\n  geom_hline(yintercept = bks[-c(1,5)],color=\"grey\",size=1,linetype=3)+\n  geom_text(aes(label=paste(round(count*100/7301,2),\"%\",sep=\"\")),hjust=-0.3)+\n  xlab(label=\"tools\")+\n  scale_fill_manual(values=c(\"red\"))+\n  scale_y_continuous(\"percent\", limits=c(0,5000),breaks = bks[-5], labels = paste(round(bks[-5]*100/7301),\"%\",sep=\"\"))+\n  coord_flip()+\n  theme_light()"
  },
  {
    "objectID": "adv_exam.html#申请基金与年龄的关系",
    "href": "adv_exam.html#申请基金与年龄的关系",
    "title": "\n16  Example\n",
    "section": "\n16.4 申请基金与年龄的关系",
    "text": "16.4 申请基金与年龄的关系\n\n16.4.1 不同阶段成功次数\n\n根据二项分布求出的理论最大成功申请基金的数量和年龄的关系\n\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",6)\nas_tibble(data)\n\n# A tibble: 12 × 2\n   年龄  理论最大成功次数\n   <chr>            <dbl>\n 1 28—30               11\n 2 31—33               10\n 3 34—36                9\n 4 37—39                8\n 5 40—42                7\n 6 43—45                6\n 7 46—48                5\n 8 49—51                4\n 9 52—54                3\n10 55—57                2\n11 58—60                1\n12 61—63                0\n\nCodeggplot(data,aes(x=年龄,y=理论最大成功次数))+\n  geom_linerange(aes(ymin = 0, ymax = 理论最大成功次数-0.1),\n                 color=\"grey\",size=3,linetype=6)+\n  geom_point(aes(y=理论最大成功次数-0.5),\n             shape=17,size=10,color=\"magenta\")+\n  geom_text(aes(label=理论最大成功次数),\n            vjust=-0.5,fontface=\"bold\",size=5)+\n  theme_classic()\n\n\n\n\n\n16.4.2 年龄段与最大命中率\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",7)\nas_tibble(data)\n\n# A tibble: 12 × 3\n   年龄  命中次数 命中率\n   <chr>    <dbl>  <dbl>\n 1 28—30        4   0.21\n 2 31—33        4   0.22\n 3 34—36        3   0.23\n 4 37—39        3   0.25\n 5 40—42        3   0.25\n 6 43—45        2   0.28\n 7 46—48        2   0.3 \n 8 49—51        1   0.34\n 9 52—54        1   0.39\n10 55—57        1   0.41\n11 58—60        0   0.64\n12 61—63        0   1   \n\nCodeggplot(data,aes(x=年龄,y=命中次数))+\n  geom_point(size=22,shape=21)+\n  geom_step(aes(group=1),linetype=6,size=2,color=\"grey\")+\n  geom_text(aes(label=round(as.numeric(data$命中率),2),vjust=0.4,fontface=\"bold\"),size=6)+\n  theme_bw()\n\n\n\n\n\n16.4.3 年龄段次数和概率\n\nCodelibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",8)\nas_tibble(data)\n\n# A tibble: 144 × 3\n   年龄  命中次数  命中率\n   <chr> <chr>      <dbl>\n 1 28—30 00       0.00738\n 2 31—33 00       0.0115 \n 3 34—36 00       0.0180 \n 4 37—39 00       0.0281 \n 5 40—42 00       0.0440 \n 6 43—45 00       0.0687 \n 7 46—48 00       0.107  \n 8 49—51 00       0.168  \n 9 52—54 00       0.262  \n10 55—57 00       0.410  \n# … with 134 more rows\n\nCodelibrary(ggthemes)\nggplot(data,aes(x=命中次数,y=命中率,fill=年龄))+\n  geom_bar(stat=\"identity\")+\n  scale_x_discrete(breaks=sprintf(\"%02.f\",seq(0,12,3)),labels=as.character(seq(0,12,3)))+\n  facet_wrap(~年龄,scale=\"free\")+\n  theme_wsj()"
  },
  {
    "objectID": "adv_exam.html#相关矩阵",
    "href": "adv_exam.html#相关矩阵",
    "title": "\n16  Example\n",
    "section": "\n16.5 相关矩阵",
    "text": "16.5 相关矩阵\n\nCodedata(mtcars)\nlibrary(psych) #计算相关系数及P值\nlibrary(tidyverse)#数据处理及可视化\ndata<-mtcars#读入示例数据\nx<-c(1,2,3,4,5,6,7,8,9,10,11);# x轴方向的变量，即显示mtcars中mpg,cyl,disp变量\ny<-c(1,2,3,4,5,6,7,8,9,10,11);# y轴方向的变量，即显示mtcars中所有的11个变量\ncormat<-corr.test(data)\nr<-cormat$r[x,y];r<-as.data.frame(r);r$namer<-row.names(r)\nr<-gather(r,key=var1,value=cor,-namer)\n\np<-cormat$p[x,y];p<-as.data.frame(p);p$namep<-row.names(p)\np<-gather(p,key=var2,value=p,-namep)\n\n#根据 x和y向量的长度生成网格序列存入df数据框中\ndf <- expand.grid(x = 1:length(x)-1, y = 1:length(y)-1)\ndf<-cbind(df,r,p)\ndf$sig<-ifelse(df$cor<=0.001,\"***\",\n               ifelse(df$cor<=0.01,\"**\",\n                      ifelse(df$cor<=0.05,\"*\",\n                             ifelse(df$cor<=0.10,\"+\",\"-\"))))\nxlabel<-unique(arrange(df[,c(\"x\",\"y\",\"var1\")],y)$var1) #y方向的变量名称\nylabel<-unique(arrange(df[,c(\"x\",\"y\",\"namer\")],desc(x))$namer) #x方向的变量名称\n\n\n\nCodeggplot(df, aes(x, y, fill = cor)) +  \n  geom_raster(hjust = 0, vjust = 0)+\n  geom_text(aes(x=x-0.5,y=y-0.5,label=sig),size=3)+ #显著度\n  annotate('text',x=-1.2,y=seq(1,length(xlabel),1)-1.5,\n           label=xlabel,size=5,hjust=1)+\n  annotate('text',x=seq(1,length(ylabel),1)-1.5,y=length(y)-0.7,\n           label=ylabel,size=5,angle=90,hjust=0)+\n  scale_x_continuous(limits=c(-3,length(x)-1),\n                     breaks=seq(-2,length(x)-1,1))+\n  scale_y_continuous(limits=c(-1,length(y)),\n                     breaks=seq(-1,length(y),1))+\n  coord_fixed(ratio=1)+\n  scale_fill_gradient2(guide=FALSE,low = \"#5da6bb\", \n                       mid=\"#FFFFFF\",high = \"#fb5c39\")+\n  theme(axis.title=element_blank(),\n        axis.ticks=element_blank(),\n        axis.text=element_blank(),\n        panel.background  = element_blank())"
  },
  {
    "objectID": "adv_exam.html#读取shp文件",
    "href": "adv_exam.html#读取shp文件",
    "title": "\n16  Example\n",
    "section": "\n16.6 读取shp文件",
    "text": "16.6 读取shp文件\n\nlibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",10)\nas_tibble(data)\n\n# A tibble: 367 × 4\n   name         lon   lat elevation\n   <chr>      <dbl> <dbl>     <dbl>\n 1 诸暨       120.   29.7      16.4\n 2 昌都地区    96.9  30.1    3433. \n 3 林芝地区    94.4  29.6    3204. \n 4 日喀则地区  88.9  29.3    3896. \n 5 山南地区    91.8  29.2    3605. \n 6 黄山       118.   29.7     193. \n 7 朝阳       120.   41.6     181. \n 8 铜仁地区   109.   27.7     389. \n 9 阿克苏地区  80.3  41.2    1113. \n10 玉树州      97.0  33.0    3895. \n# … with 357 more rows\n\n\n\nCodelibrary(ggthemes)\nchina_map<-sf::st_read(\"data/province.shp\")#province border\n\nReading layer `province' from data source \n  `E:\\R_tmp\\aproaching_ggplot2\\data\\province.shp' using driver `ESRI Shapefile'\nSimple feature collection with 34 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 73.50235 ymin: 3.83703 xmax: 135.0957 ymax: 53.56362\nGeodetic CRS:  WGS 84\n\nCodeggplot(data=data)+\n  geom_sf(data=china_map,aes(fill=pr_name,geometry=geometry))+\n  geom_point(aes(x = lon, y = lat), size = 0.3)+\n  guides(fill=FALSE)+\n  coord_sf(crs = sf::st_crs(4326))+\n  theme_map()"
  },
  {
    "objectID": "adv_exam.html#等值线图",
    "href": "adv_exam.html#等值线图",
    "title": "\n16  Example\n",
    "section": "\n16.7 等值线图",
    "text": "16.7 等值线图\n\nlibrary(readxl)\ndata<-read_excel(\"data/data.xlsx\",11)\nas_tibble(data)\n\n# A tibble: 199 × 16\n   st.no   lon   lat   Mon   Tue   Wed   Thu   Fri   Sat   Sun   Jan spring\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n 1   258 123.   41.7 101.   96.4  94.7  95.7  97.7 104.  102.  122.    98.3\n 2   244 115.   38.0 132.  135.  136.  139.  143.  144.  136.  221.   123. \n 3    79 119.   26.1  58.9  58.4  57.1  57.9  59.3  58.1  58.5  68.0   64.8\n 4    45 113.   28.2  90.7  89.0  88.6  85.5  88.4  89.5  89.9 149.    80.5\n 5   142 117.   36.7 121.  115.  119.  126.  122.  125.  127.  169.   119. \n 6   194 104.   36.1  92.6  90.1  96.2  98.8 102.   95.4  91.7 111.    99.0\n 7   288 114.   30.6 102.   96.7  96.6  97.2  98.6 101.  104.  163.    94.8\n 8   294  87.6  43.8 109.  107.  113.  112.  110.  106.  106.  203.    93.8\n 9    21 116.   39.9 108.  111.  112.  118.  119.  124.  116.  124.   114. \n10    99 127.   45.8  90.6  91.9  91.1  91.8  95.9  95.7  94.5 150.    76.4\n# … with 189 more rows, and 4 more variables: summer <dbl>, autumn <dbl>,\n#   winter <dbl>, annual <dbl>\n\n\n\nCode#栅格化每一列数据，存入data_grid中，以进行画图\n#数据表列名依次为:lon,lat,Mon,Tue,Wed,……,annual\nlibrary(tidyverse)\n\ndata_grid<-data.frame(lon=NA,lat=NA,value=NA,tag=NA)\n# time_vec<-c('annual','spring','summer','autumn','winter',\n#             'Mon','Tue','Wed','Thu','Fri','Sat','Sun')\n\ntime_vec<-c('spring','summer','autumn','winter')\n\nfor (i in time_vec)\n{\n  annual_loess<-loess(data[,which(colnames(data)==i)][[1]]~lon+lat,data=data)\n  lon_grid<-seq(min(data$lon),max(data$lon),0.25)\n  lat_grid<-seq(min(data$lat),max(data$lat),0.25)\n  data.fit<-expand.grid(lon=lon_grid,lat=lat_grid)\n  annual_predict<-as.data.frame(predict(annual_loess,newdata=data.fit))\n  annual_predict$lon<-row.names(annual_predict)\n  annual_grid<-gather(annual_predict,lat,value,-lon)\n  annual_grid$lon<-as.numeric(str_sub(annual_grid$lon,str_locate(annual_grid$lon,'=')[,1]+1))\n  annual_grid$lat<-as.numeric(str_sub(annual_grid$lat,str_locate(annual_grid$lat,'=')[,1]+1)) \n  annual_grid$tag<-i\n  data_grid<-rbind(data_grid,annual_grid)\n}\ndata_grid<-data_grid[!is.na(data_grid$tag),]\ndata_grid$tagnew<-factor(data_grid$tag,ordered=TRUE,levels=time_vec)\nggplot() + \n  stat_contour(geom=\"polygon\",data=data_grid, aes(x=lon, y=lat, z=value,fill=..level..),binwidth=0.01)+\n  scale_fill_distiller(palette = \"Spectral\")+\n  facet_wrap(~tagnew,ncol=2)"
  },
  {
    "objectID": "ex.html",
    "href": "ex.html",
    "title": "■ Practical",
    "section": "",
    "text": "I have nothing to say!"
  },
  {
    "objectID": "ex_ncov2019.html",
    "href": "ex_ncov2019.html",
    "title": "\n17  ncov2019\n",
    "section": "",
    "text": "remotes::install_github(\"GuangchuangYu/nCov2019\")\nremotes::install_github(\"GuangchuangYu/chinamap\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Approaching ggplot2",
    "section": "",
    "text": "The ggplot2 cookbook was formatted using the Quarto Document in Rstudio. To learn more about Quarto books visit https://quarto.org/docs/books.\nI assume you have already installed R (https://www.r-project.org) (R Core Team 2022) and the RStudio IDE (https://www.rstudio.com).\nNext you can install the rmarkdown package in R:\n\n## Install from CRAN\n#install.packages('rmarkdown')\n\n## Or if you want to test the development version,\n## install from GitHub\n# if (!requireNamespace(\"remotes\"))\n#   install.packages('remotes')\n# remotes::install_github('rstudio/rmarkdown')\n\nIf you want to generate PDF output, you will need to install LaTeX. For R Markdown users who have not installed LaTeX before, we recommend that you install TinyTeX :\n\n# install.packages('tinytex')\n# tinytex::install_tinytex()  # install TinyTeX"
  },
  {
    "objectID": "index.html#所需程序包",
    "href": "index.html#所需程序包",
    "title": "Approaching ggplot2",
    "section": "所需程序包",
    "text": "所需程序包\n\n\n\n\n\n\n程序包\n安装方法\n\n\n\ntidyverse\ninstall.packages(“tidyverse”)\n\n\nplyr\ninstall.packages(“plyr”)\n\n\nggthemes\ninstall.packages(“ggthemes”)\n\n\nggthemr\ninstall.packages(“ggthemr”)\n\n\nggsci\ninstall.packages(“ggsci”)\n\n\nggtech\ndevtools::install_github(“ricardo-bion/ggtech”,dependencies=TRUE)\n\n\nggplotAssist\ninstall.packages(“ggplotAssist”)\n\n\nggplotgui\ninstall.packages(“ggplotgui”)\n\n\nggpubr\ninstall.packages(“ggpubr”)\n\n\neasyGgplot2\ndevtools::install_github(“kassambara/easyGgplot2”)\n\n\ngridExtra\ninstall.packages(“gridExtra”)\n\n\nggplot2\ndevtools::install_github(“hadley/ggplot2”)"
  },
  {
    "objectID": "index.html#参考资料推荐",
    "href": "index.html#参考资料推荐",
    "title": "Approaching ggplot2",
    "section": "参考资料推荐",
    "text": "参考资料推荐\nggplot2:Elegant Graphics for Data Analysis\nR Graphics Cookbook\nggplot2作图函数参考网址"
  },
  {
    "objectID": "ex_ncov2019.html#全球疫情形势",
    "href": "ex_ncov2019.html#全球疫情形势",
    "title": "\n17  ncov2019\n",
    "section": "\n17.1 全球疫情形势",
    "text": "17.1 全球疫情形势\n\nlibrary(nCov2019)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ny = load_nCov2019(lang='zh')# 可改为en\nd = y['global']\n\ndd <- filter(d, time == time(y) & country != '中国') %>% \n  arrange(desc(cum_confirm)) \n\ndd = dd[1:40, ]\ndd$country = factor(dd$country, levels=dd$country)\ndd$angle = 1:40 * 360/40\ni = dd$angle > 90 & dd$cum_confirm > dd$cum_confirm[21]\ndd$angle[i] = dd$angle[i] + 180\ndd$vjust = 1\ndd$vjust[i] = 0\n\nas_tibble(dd)\n\n# A tibble: 40 × 7\n   time       country cum_confirm cum_heal cum_dead angle vjust\n   <date>     <fct>         <int>    <int>    <int> <dbl> <dbl>\n 1 2021-03-19 美国       30360639 22523803   552475     9     1\n 2 2021-03-19 巴西       11787600 10339432   287795    18     1\n 3 2021-03-19 印度       11514331 11083679   159405    27     1\n 4 2021-03-19 俄罗斯      4437938  4049373    94267    36     1\n 5 2021-03-19 英国        4280882  3593136   125926    45     1\n 6 2021-03-19 法国        4181607   278263    91679    54     1\n 7 2021-03-19 意大利      3306711  2655346   103855    63     1\n 8 2021-03-19 西班牙      3212332  2945446    72910    72     1\n 9 2021-03-19 土耳其      2950603  2770638    29777    81     1\n10 2021-03-19 德国        2636434  2401413    75071    90     1\n# … with 30 more rows\n\ndata100_plus<-function(d) d[d$cum_confirm > dd$cum_confirm[21],]\ndata100_minus<-function(d) d[d$cum_confirm < dd$cum_confirm[21],]\n\n\nCodewindowsFonts(jianti=windowsFont(\"dengxian\"))\np <- ggplot(dd, aes(country, cum_confirm, fill=cum_confirm)) + \n  geom_col(width=1, color='grey90') + \n  geom_col(aes(y=I(5)), width=1, fill='grey90', alpha = .2) +       \n  geom_col(aes(y=I(3)), width=1, fill='grey90', alpha = .2) +    \n  geom_col(aes(y=I(2)), width=1, fill = \"white\") +\n  scale_y_log10() + \n  #scale_fill_gradientn(colors=c(\"darkgreen\", \"green\", \"orange\", \"firebrick\",\"red\"), trans=\"log\") + \n  scale_fill_gradientn(colors=c(\"#57868c\",\"#39bc5c\",\"#c5da27\",\"#eda027\",\"#da400c\",\"#c90d47\"),\n                       trans=\"log\")+\n  geom_text(aes(label=paste(country, cum_confirm, sep=\"\\n\"),\n                y = cum_confirm *.8, angle=angle, vjust=vjust),\n            data= data100_plus(dd),\n            size=3, color = \"white\", fontface=\"bold\",family=\"jianti\")  +\n  geom_text(aes(label=paste0(cum_confirm, \"例 \", country), \n                y = cum_confirm * 2, angle=angle+90), \n            data= data100_minus(dd), \n            size=3, vjust=0,fontface=\"bold\",family=\"jianti\") +\n  coord_polar(direction=-1) + \n  theme_void() + \n  theme(legend.position=\"none\")\n\nggplotify::as.ggplot(p, scale=1.25, vjust=-.05, hjust=0)\n\n\n\n全球疫情形势"
  },
  {
    "objectID": "ex_ncov2019.html#section",
    "href": "ex_ncov2019.html#section",
    "title": "\n17  ncov2019\n",
    "section": "\n17.2 ",
    "text": "17.2"
  },
  {
    "objectID": "bas_facet.html",
    "href": "bas_facet.html",
    "title": "\n6  facet()\n",
    "section": "",
    "text": "p<-ggplot(mpg)+aes(cty,hwy)+geom_point()+geom_smooth();p\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np+facet_grid(.~drv)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np<-ggplot(mpg)+aes(cty,hwy)+geom_point()+geom_smooth()+coord_polar(theta = \"y\");p\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\np+facet_grid(.~drv)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\nggplot(mpg)+\n  geom_point(aes(cty,hwy,color=class,shape=as.factor(cyl)))+\n  facet_wrap(~class)\n\n\n\n\n\nggplot(mpg,aes(cty,hwy,color=class))+\n  geom_smooth(method=\"lm\",color=\"grey\",size=4)+ \n  geom_point(size=3)+\n  facet_wrap(~class)\n\n`geom_smooth()` using formula 'y ~ x'"
  }
]